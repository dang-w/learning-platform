{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-17T18:06:54.584Z",
    "end": "2025-03-17T18:07:17.428Z",
    "duration": 22844,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94ba449a-9481-486b-98b8-0d71b35807ff",
      "title": "",
      "fullFile": "cypress/e2e/auth.cy.ts",
      "file": "cypress/e2e/auth.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53352ca1-1f6e-48bc-9fc9-714e479fd0dc",
          "title": "Authentication Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show validation errors for invalid registration",
              "fullTitle": "Authentication Flow should show validation errors for invalid registration",
              "timedOut": null,
              "duration": 2351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/auth.cy.ts\"\n}",
              "code": "cy.visit('/auth/register');\n// Submit empty form\ncy.get('button[type=\"submit\"]').click();\n// Should show validation errors\ncy.get('[data-testid=\"error-username\"]').should('be.visible');\ncy.get('[data-testid=\"error-email\"]').should('be.visible');\ncy.get('[data-testid=\"error-password\"]').should('be.visible');\n// Test invalid email format\ncy.get('#username').type('testuser');\ncy.get('#email').type('invalid-email');\ncy.get('#password').type('short');\ncy.get('#fullName').type('Test User');\ncy.get('button[type=\"submit\"]').click();\n// Should show specific validation errors\ncy.get('[data-testid=\"error-email\"]').should('be.visible');\ncy.get('[data-testid=\"error-password\"]').should('be.visible');",
              "err": {},
              "uuid": "6781e20c-5546-408d-a32b-93fabfb97bdc",
              "parentUUID": "53352ca1-1f6e-48bc-9fc9-714e479fd0dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow a user to register and login",
              "fullTitle": "Authentication Flow should allow a user to register and login",
              "timedOut": null,
              "duration": 16261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/auth.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/auth.cy.ts/Authentication Flow -- should allow a user to register and login (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Visit the registration page\ncy.visit('/auth/register');\ncy.url().should('contain', '/auth/register');\n// Fill out the registration form\ncy.get('#username').type(testUser.username);\ncy.get('#email').type(testUser.email);\ncy.get('#password').type(testUser.password);\ncy.get('#confirmPassword').type(testUser.password);\ncy.get('#fullName').type(testUser.fullName);\n// Submit the form\ncy.get('button[type=\"submit\"]').click();\n// After registration, we should be redirected to login page\ncy.url().should('contain', '/auth/login', { timeout: 10000 });\n// Login with the newly created account\ncy.get('#username').type(testUser.username);\ncy.get('#password').type(testUser.password);\ncy.get('button[type=\"submit\"]').click();\n// After successful login, we should be redirected to dashboard\n// Verify we're on the dashboard page\ncy.url().should('contain', '/dashboard', { timeout: 15000 });\n// Wait for the dashboard to load - just verify we're on the dashboard URL\n// This is a more reliable check than looking for specific elements\ncy.url().should('contain', '/dashboard');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: [object Object]: expected 'http://localhost:3000/auth/login?callbackUrl=%2Fdashboard' to include '/dashboard'",
                "estack": "AssertionError: Timed out retrying after 10000ms: [object Object]: expected 'http://localhost:3000/auth/login?callbackUrl=%2Fdashboard' to include '/dashboard'\n    at Context.eval (webpack://frontend/./cypress/e2e/auth.cy.ts:51:0)",
                "diff": null
              },
              "uuid": "f95c86f9-e272-42b4-b9e4-7a4f14de8f68",
              "parentUUID": "53352ca1-1f6e-48bc-9fc9-714e479fd0dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error for invalid login credentials",
              "fullTitle": "Authentication Flow should show error for invalid login credentials",
              "timedOut": null,
              "duration": 2178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/auth.cy.ts\"\n}",
              "code": "cy.visit('/auth/login');\n// Try to login with invalid credentials\ncy.get('#username').type('nonexistent-user');\ncy.get('#password').type('WrongPassword123!');\ncy.get('button[type=\"submit\"]').click();\n// Should show some kind of error message or at least stay on the login page\n// Since error handling might vary, we'll just verify we're still on the login page\ncy.url().should('contain', '/auth/login');\n// Try to find any error message, but don't fail if not found\ncy.get('body').then(function ($body) {\n    // Check for common error message patterns\n    if ($body.text().match(/error|invalid|incorrect|failed/i)) {\n        cy.log('Error message found on page');\n    }\n    else {\n        cy.log('No error message found, but still on login page');\n    }\n});",
              "err": {},
              "uuid": "0cefe87d-8b47-422c-a328-c11efabb9962",
              "parentUUID": "53352ca1-1f6e-48bc-9fc9-714e479fd0dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should support programmatic login via custom command",
              "fullTitle": "Authentication Flow should support programmatic login via custom command",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/auth.cy.ts\"\n}",
              "code": "// Create a test user first via API\ncy.createTestUser(testUser);\n// Use the custom login command\ncy.login(testUser.username, testUser.password);\n// Verify token was set in localStorage\ncy.window().its('localStorage').invoke('getItem', 'token').should('not.be.null');\n// Visit the dashboard\ncy.visit('/dashboard');\n// Verify we're on the dashboard page\ncy.url().should('contain', '/dashboard', { timeout: 15000 });\n// Wait for the dashboard to load - just verify we're on the dashboard URL\n// This is a more reliable check than looking for specific elements\ncy.url().should('contain', '/dashboard');",
              "err": {},
              "uuid": "9c0c72a6-df2b-472a-ae80-6aa54bdbca54",
              "parentUUID": "53352ca1-1f6e-48bc-9fc9-714e479fd0dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6781e20c-5546-408d-a32b-93fabfb97bdc",
            "0cefe87d-8b47-422c-a328-c11efabb9962",
            "9c0c72a6-df2b-472a-ae80-6aa54bdbca54"
          ],
          "failures": [
            "f95c86f9-e272-42b4-b9e4-7a4f14de8f68"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}