{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-17T17:19:45.176Z",
    "end": "2025-03-17T17:19:45.870Z",
    "duration": 694,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "a51b9e36-4c58-4210-94f7-6ba52bfe2eac",
      "title": "",
      "fullFile": "cypress/e2e/url-metadata.cy.ts",
      "file": "cypress/e2e/url-metadata.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2320c911-ca86-4bed-b1e7-cbe69c9f1842",
          "title": "URL Metadata Extraction",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should extract metadata from a valid URL",
              "fullTitle": "URL Metadata Extraction should extract metadata from a valid URL",
              "timedOut": null,
              "duration": 544,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/url-metadata.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/url-metadata.cy.ts/URL Metadata Extraction -- should extract metadata from a valid URL -- before each hook (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Enter a valid URL in the URL input field\ncy.get('[data-testid=\"resource-url-input\"]').type('https://example.com');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Check that the loading indicator is displayed\ncy.get('[data-testid=\"metadata-loading\"]').should('be.visible');\n// Wait for the metadata to be extracted\ncy.get('[data-testid=\"metadata-loading\"]', { timeout: 10000 }).should('not.exist');\n// Check that the title field is populated\ncy.get('[data-testid=\"resource-title-input\"]').should('not.have.value', '');\n// Check that the description field is populated\ncy.get('[data-testid=\"resource-description-input\"]').should('not.have.value', '');",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/token\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 46\n}\nBody: username=test-user&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"cache-control\": \"no-store, must-revalidate\",\n  \"vary\": \"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch, Accept-Encoding\",\n  \"link\": \"</_next/static/chunks/%5Broot%20of%20the%20server%5D__08514339._.css>; rel=preload; as=\\\"style\\\"\",\n  \"x-powered-by\": \"Next.js\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-encoding\": \"gzip\",\n  \"date\": \"Mon, 17 Mar 2025 17:19:45 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\",\n  \"transfer-encoding\": \"chunked\"\n}\nBody: <!DOCTYPE html><html lang=\"en\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"stylesheet\" href=\"/_next/static/chunks/%5Broot%20of%20the%20server%5D__08514339._.css\" data-precedence=\"next_static/chunks/[root of the server]__08514339._.css\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/_next/static/chunks/%5Bturbopack%5D_browser_dev_hmr-client_hmr-client_ts_49a6ea35._.js\"/><script src=\"/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_3bfaed20._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_%40swc_helpers_cjs_00636ac3._.js\" async=\"\"></script><script src=\"/_next/static/chunks/_e69f0d32._.js\" async=\"\"></script><script src=\"/_next/static/chunks/_be317ff2._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_1a6ee436._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_app_favicon_ico_mjs_79b6a596._.js\" async=\"\"></script><script src=\"/_next/static/chunks/[turbopack]_browser_dev_hmr-client_hmr-client_ts_f2322ef7._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_axios_lib_99999129._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_@headlessui_react_dist_306b8882._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_@floating-ui_react_dist_c1a64d8e._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_8535f519._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_8227d2ef._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_app_layout_tsx_f0e4c1a2._.js\" async=\"\"></script><script src=\"/_next/static/chunks/%5Bturbopack%5D_browser_dev_hmr-client_hmr-client_ts_f2322ef7._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_%40headlessui_react_dist_306...\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `URL Metadata Extraction`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/token\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 46\n}\nBody: username=test-user&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"cache-control\": \"no-store, must-revalidate\",\n  \"vary\": \"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch, Accept-Encoding\",\n  \"link\": \"</_next/static/chunks/%5Broot%20of%20the%20server%5D__08514339._.css>; rel=preload; as=\\\"style\\\"\",\n  \"x-powered-by\": \"Next.js\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-encoding\": \"gzip\",\n  \"date\": \"Mon, 17 Mar 2025 17:19:45 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\",\n  \"transfer-encoding\": \"chunked\"\n}\nBody: <!DOCTYPE html><html lang=\"en\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"stylesheet\" href=\"/_next/static/chunks/%5Broot%20of%20the%20server%5D__08514339._.css\" data-precedence=\"next_static/chunks/[root of the server]__08514339._.css\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/_next/static/chunks/%5Bturbopack%5D_browser_dev_hmr-client_hmr-client_ts_49a6ea35._.js\"/><script src=\"/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_3bfaed20._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_%40swc_helpers_cjs_00636ac3._.js\" async=\"\"></script><script src=\"/_next/static/chunks/_e69f0d32._.js\" async=\"\"></script><script src=\"/_next/static/chunks/_be317ff2._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_next_dist_1a6ee436._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_app_favicon_ico_mjs_79b6a596._.js\" async=\"\"></script><script src=\"/_next/static/chunks/[turbopack]_browser_dev_hmr-client_hmr-client_ts_f2322ef7._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_axios_lib_99999129._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_@headlessui_react_dist_306b8882._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_@floating-ui_react_dist_c1a64d8e._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_8535f519._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_8227d2ef._.js\" async=\"\"></script><script src=\"/_next/static/chunks/src_app_layout_tsx_f0e4c1a2._.js\" async=\"\"></script><script src=\"/_next/static/chunks/%5Bturbopack%5D_browser_dev_hmr-client_hmr-client_ts_f2322ef7._.js\" async=\"\"></script><script src=\"/_next/static/chunks/node_modules_%40headlessui_react_dist_306...\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `URL Metadata Extraction`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133638:72)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/support/commands.ts:16:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "fb7deb1f-4359-4e81-9b67-cc47d93aec97",
              "parentUUID": "2320c911-ca86-4bed-b1e7-cbe69c9f1842",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error message for invalid URLs",
              "fullTitle": "URL Metadata Extraction should show an error message for invalid URLs",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter an invalid URL in the URL input field\ncy.get('[data-testid=\"resource-url-input\"]').type('invalid-url');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Check that the error message is displayed\ncy.get('[data-testid=\"metadata-error\"]').should('be.visible');\n// Check that the error message contains the expected text\ncy.get('[data-testid=\"metadata-error\"]').should('contain', 'Invalid URL');",
              "err": {},
              "uuid": "82ee8032-99c0-483c-85da-f124222c663f",
              "parentUUID": "2320c911-ca86-4bed-b1e7-cbe69c9f1842",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should show an error message when metadata extraction fails",
              "fullTitle": "URL Metadata Extraction should show an error message when metadata extraction fails",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter a URL that will fail metadata extraction\ncy.get('[data-testid=\"resource-url-input\"]').type('https://nonexistent-site-for-testing.com');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Check that the loading indicator is displayed\ncy.get('[data-testid=\"metadata-loading\"]').should('be.visible');\n// Wait for the error message to be displayed\ncy.get('[data-testid=\"metadata-error\"]', { timeout: 10000 }).should('be.visible');\n// Check that the error message contains the expected text\ncy.get('[data-testid=\"metadata-error\"]').should('contain', 'Failed to extract metadata');",
              "err": {},
              "uuid": "2ae9d320-f63e-40bc-85e2-e548fc5b6acd",
              "parentUUID": "2320c911-ca86-4bed-b1e7-cbe69c9f1842",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow manual entry after failed metadata extraction",
              "fullTitle": "URL Metadata Extraction should allow manual entry after failed metadata extraction",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter a URL that will fail metadata extraction\ncy.get('[data-testid=\"resource-url-input\"]').type('https://nonexistent-site-for-testing.com');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Wait for the error message to be displayed\ncy.get('[data-testid=\"metadata-error\"]', { timeout: 10000 }).should('be.visible');\n// Enter title manually\ncy.get('[data-testid=\"resource-title-input\"]').type('Manual Title');\n// Enter description manually\ncy.get('[data-testid=\"resource-description-input\"]').type('Manual description for testing');\n// Select resource type\ncy.get('[data-testid=\"resource-type-select\"]').click();\ncy.get('[data-testid=\"resource-type-article\"]').click();\n// Add tags\ncy.get('[data-testid=\"resource-tags-input\"]').type('test{enter}manual{enter}');\n// Submit the form\ncy.get('[data-testid=\"save-resource-button\"]').click();\n// Check that we're redirected to the resources page\ncy.url().should('include', '/resources');\n// Check that the new resource is displayed in the list\ncy.get('[data-testid=\"resources-list\"]').should('contain', 'Manual Title');",
              "err": {},
              "uuid": "e885ea8e-a12a-4f2e-bfb5-e2c197249739",
              "parentUUID": "2320c911-ca86-4bed-b1e7-cbe69c9f1842",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb7deb1f-4359-4e81-9b67-cc47d93aec97"
          ],
          "pending": [],
          "skipped": [
            "82ee8032-99c0-483c-85da-f124222c663f",
            "2ae9d320-f63e-40bc-85e2-e548fc5b6acd",
            "e885ea8e-a12a-4f2e-bfb5-e2c197249739"
          ],
          "duration": 544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}