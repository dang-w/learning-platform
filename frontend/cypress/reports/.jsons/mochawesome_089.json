{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 1,
    "pending": 0,
    "failures": 3,
    "start": "2025-03-17T18:28:35.166Z",
    "end": "2025-03-17T18:29:11.372Z",
    "duration": 36206,
    "testsRegistered": 4,
    "passPercent": 25,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4301ca4e-8665-40ec-8fb1-c6669ff08261",
      "title": "",
      "fullFile": "cypress/e2e/url-metadata.cy.ts",
      "file": "cypress/e2e/url-metadata.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb316387-d8fc-4dd6-9595-886e08bdfc21",
          "title": "URL Metadata Extraction",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should extract metadata from a valid URL",
              "fullTitle": "URL Metadata Extraction should extract metadata from a valid URL",
              "timedOut": null,
              "duration": 1360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/url-metadata.cy.ts\"\n}",
              "code": "// Verify we have a token at minimum\ncy.window().its('localStorage').invoke('getItem', 'token').should('not.be.null');\n// Check if the resource URL input exists before trying to interact with it\ncy.get('body').then(function ($body) {\n    if ($body.find('[data-testid=\"resource-url-input\"]').length) {\n        // Enter a valid URL in the URL input field\n        cy.get('[data-testid=\"resource-url-input\"]').type('https://example.com');\n        // Check if extract button exists\n        if ($body.find('[data-testid=\"extract-metadata-button\"]').length) {\n            // Click the extract metadata button\n            cy.get('[data-testid=\"extract-metadata-button\"]').click();\n            // Check if loading indicator exists\n            cy.get('body').then(function ($updatedBody) {\n                if ($updatedBody.find('[data-testid=\"metadata-loading\"]').length) {\n                    // Check that the loading indicator is displayed\n                    cy.get('[data-testid=\"metadata-loading\"]').should('be.visible');\n                    // Wait for the loading to finish but don't fail if API doesn't work\n                    cy.wait(5000);\n                }\n                else {\n                    cy.log('Metadata loading indicator not found - API may not be implemented');\n                }\n            });\n        }\n        else {\n            cy.log('Extract metadata button not found - feature may not be implemented');\n        }\n    }\n    else {\n        cy.log('Resource URL input not found - page may not be loaded correctly or may be a 404 page');\n    }\n});",
              "err": {},
              "uuid": "f9ffdec2-f836-46c7-931e-c3ef57ec1b03",
              "parentUUID": "bb316387-d8fc-4dd6-9595-886e08bdfc21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error message for invalid URLs",
              "fullTitle": "URL Metadata Extraction should show an error message for invalid URLs",
              "timedOut": null,
              "duration": 11452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/url-metadata.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/url-metadata.cy.ts/URL Metadata Extraction -- should show an error message for invalid URLs (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Enter an invalid URL in the URL input field\ncy.get('[data-testid=\"resource-url-input\"]').type('invalid-url');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Check that the error message is displayed\ncy.get('[data-testid=\"metadata-error\"]').should('be.visible');\n// Check that the error message contains the expected text\ncy.get('[data-testid=\"metadata-error\"]').should('contain', 'Invalid URL');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/url-metadata.cy.ts:61:0)",
                "diff": null
              },
              "uuid": "7d64659f-9bd9-4c9b-8fcf-d2d2b120434e",
              "parentUUID": "bb316387-d8fc-4dd6-9595-886e08bdfc21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error message when metadata extraction fails",
              "fullTitle": "URL Metadata Extraction should show an error message when metadata extraction fails",
              "timedOut": null,
              "duration": 11549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/url-metadata.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/url-metadata.cy.ts/URL Metadata Extraction -- should show an error message when metadata extraction fails (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Enter a URL that will fail metadata extraction\ncy.get('[data-testid=\"resource-url-input\"]').type('https://nonexistent-site-for-testing.com');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Check that the loading indicator is displayed\ncy.get('[data-testid=\"metadata-loading\"]').should('be.visible');\n// Wait for the error message to be displayed\ncy.get('[data-testid=\"metadata-error\"]', { timeout: 10000 }).should('be.visible');\n// Check that the error message contains the expected text\ncy.get('[data-testid=\"metadata-error\"]').should('contain', 'Failed to extract metadata');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/url-metadata.cy.ts:71:0)",
                "diff": null
              },
              "uuid": "1566f64c-033f-4032-aace-b431614fa3f8",
              "parentUUID": "bb316387-d8fc-4dd6-9595-886e08bdfc21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow manual entry after failed metadata extraction",
              "fullTitle": "URL Metadata Extraction should allow manual entry after failed metadata extraction",
              "timedOut": null,
              "duration": 11713,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/url-metadata.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/url-metadata.cy.ts/URL Metadata Extraction -- should allow manual entry after failed metadata extraction (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Enter a URL that will fail metadata extraction\ncy.get('[data-testid=\"resource-url-input\"]').type('https://nonexistent-site-for-testing.com');\n// Click the extract metadata button\ncy.get('[data-testid=\"extract-metadata-button\"]').click();\n// Wait for the error message to be displayed\ncy.get('[data-testid=\"metadata-error\"]', { timeout: 10000 }).should('be.visible');\n// Enter title manually\ncy.get('[data-testid=\"resource-title-input\"]').type('Manual Title');\n// Enter description manually\ncy.get('[data-testid=\"resource-description-input\"]').type('Manual description for testing');\n// Select resource type\ncy.get('[data-testid=\"resource-type-select\"]').click();\ncy.get('[data-testid=\"resource-type-article\"]').click();\n// Add tags\ncy.get('[data-testid=\"resource-tags-input\"]').type('test{enter}manual{enter}');\n// Submit the form\ncy.get('[data-testid=\"save-resource-button\"]').click();\n// Check that we're redirected to the resources page\ncy.url().should('include', '/resources');\n// Check that the new resource is displayed in the list\ncy.get('[data-testid=\"resources-list\"]').should('contain', 'Manual Title');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"resource-url-input\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/url-metadata.cy.ts:83:0)",
                "diff": null
              },
              "uuid": "0a018e64-7f74-4505-9da1-78639dbe6851",
              "parentUUID": "bb316387-d8fc-4dd6-9595-886e08bdfc21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9ffdec2-f836-46c7-931e-c3ef57ec1b03"
          ],
          "failures": [
            "7d64659f-9bd9-4c9b-8fcf-d2d2b120434e",
            "1566f64c-033f-4032-aace-b431614fa3f8",
            "0a018e64-7f74-4505-9da1-78639dbe6851"
          ],
          "pending": [],
          "skipped": [],
          "duration": 36074,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}