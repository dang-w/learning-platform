{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-31T14:34:50.595Z",
    "end": "2025-03-31T14:34:53.116Z",
    "duration": 2521,
    "testsRegistered": 9,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "330a80bb-e4d8-4580-9723-e5ad0df91da1",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/dashboard.cy.ts",
      "file": "e2e-testing/cypress/e2e/dashboard.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
          "title": "Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display dashboard overview with all sections",
              "fullTitle": "Dashboard should display dashboard overview with all sections",
              "timedOut": null,
              "duration": 591,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/dashboard.cy.ts/Dashboard -- should display dashboard overview with all sections (failed).png\"\n    ],\n    [\n      \"/dashboard.cy.ts/Dashboard -- should display dashboard overview with all sections (failed) (attempt 2).png\"\n    ],\n    [\n      \"/dashboard.cy.ts/Dashboard -- should display dashboard overview with all sections -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "// Check that the dashboard has loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Take screenshot of dashboard overview\n    page_objects_1.dashboardPage.takeScreenshot('dashboard-overview');\n    // Verify token is present to confirm successful login\n    cy.window().its('localStorage').invoke('getItem', 'token').should('not.be.null');\n    cy.log('Login successful, token verified');\n});",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/dashboard\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Dashboard`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/dashboard\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Dashboard`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132351:76)\n    at visitFailedByErr (http://localhost:3000/__cypress/runner/cypress_runner.js:131757:12)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132334:13)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at __webpack_modules__../cypress/support/page-objects/DashboardPage.ts.DashboardPage.visitDashboard (webpack:///./cypress/support/page-objects/DashboardPage.ts:81:0)\n    at Context.eval (webpack:///./cypress/e2e/dashboard.cy.ts:14:0)",
                "diff": null
              },
              "uuid": "c45e2be1-e5ad-40d7-a23e-3e2a7d0f676b",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display user-specific greeting if available",
              "fullTitle": "Dashboard should display user-specific greeting if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check for user greeting\n    cy.get('body').then(function ($body) {\n        var hasUserGreeting = $body.find('[data-testid=\"user-greeting\"]').length > 0;\n        if (hasUserGreeting) {\n            cy.get('[data-testid=\"user-greeting\"]').should('be.visible');\n            page_objects_1.dashboardPage.takeScreenshot('user-greeting');\n        }\n        else {\n            cy.log('User greeting not found - may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-user-greeting');\n        }\n    });\n});",
              "err": {},
              "uuid": "0a4a832f-b3db-4966-b25a-d6e9dc95a77a",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow quick navigation to main sections",
              "fullTitle": "Dashboard should allow quick navigation to main sections",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Try to navigate to resources if available\n    cy.get('body').then(function ($body) {\n        var hasResourcesNav = $body.find('[data-testid=\"nav-resources\"]').length > 0;\n        if (hasResourcesNav) {\n            page_objects_1.dashboardPage.goToResources();\n            page_objects_1.dashboardPage.takeScreenshot('resources-section');\n            cy.go('back');\n        }\n    });\n    // Try to navigate to concepts if available\n    cy.get('body').then(function ($body) {\n        var hasConceptsNav = $body.find('[data-testid=\"nav-concepts\"]').length > 0;\n        if (hasConceptsNav) {\n            page_objects_1.dashboardPage.goToConcepts();\n            page_objects_1.dashboardPage.takeScreenshot('concepts-section');\n            cy.go('back');\n        }\n    });\n    // Try to navigate to learning path if available\n    cy.get('body').then(function ($body) {\n        var hasLearningPathNav = $body.find('[data-testid=\"nav-learning-path\"]').length > 0;\n        if (hasLearningPathNav) {\n            page_objects_1.dashboardPage.goToLearningPath();\n            page_objects_1.dashboardPage.takeScreenshot('learning-path-section');\n            cy.go('back');\n        }\n    });\n    // Try to navigate to analytics if available\n    cy.get('body').then(function ($body) {\n        var hasAnalyticsNav = $body.find('[data-testid=\"nav-analytics\"]').length > 0;\n        if (hasAnalyticsNav) {\n            page_objects_1.dashboardPage.goToAnalytics();\n            page_objects_1.dashboardPage.takeScreenshot('analytics-section');\n            cy.go('back');\n        }\n    });\n});",
              "err": {},
              "uuid": "75c306d5-adf4-43f0-a3ef-d6d02b05e507",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display recent activity feed if available",
              "fullTitle": "Dashboard should display recent activity feed if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check for activity feed\n    cy.get('body').then(function ($body) {\n        var hasActivityItems = $body.find('[data-testid=\"activity-item\"]').length > 0;\n        if (hasActivityItems) {\n            cy.get('[data-testid=\"activity-item\"]').should('have.length.at.least', 1);\n            page_objects_1.dashboardPage.takeScreenshot('activity-feed');\n        }\n        else {\n            cy.log('No activity items found - they may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-activity-feed');\n        }\n    });\n});",
              "err": {},
              "uuid": "db23a58e-09c8-420a-8a98-803e92692667",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display quick stats with correct data if available",
              "fullTitle": "Dashboard should display quick stats with correct data if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check for quick stats section\n    cy.get('body').then(function ($body) {\n        var hasQuickStats = $body.find('[data-testid=\"stat-study-time\"]').length > 0 ||\n            $body.find('[data-testid=\"stat-resources-completed\"]').length > 0 ||\n            $body.find('[data-testid=\"stat-concepts-reviewed\"]').length > 0 ||\n            $body.find('[data-testid=\"stat-goals-completed\"]').length > 0;\n        if (hasQuickStats) {\n            page_objects_1.dashboardPage.takeScreenshot('quick-stats');\n        }\n        else {\n            cy.log('No quick stats found - they may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-quick-stats');\n        }\n    });\n});",
              "err": {},
              "uuid": "b3d24301-f473-4905-ab0a-346533b1c349",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display upcoming reviews if available",
              "fullTitle": "Dashboard should display upcoming reviews if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check for upcoming reviews section\n    cy.get('body').then(function ($body) {\n        var hasUpcomingReviews = $body.find('[data-testid=\"upcoming-reviews-section\"]').length > 0;\n        if (hasUpcomingReviews) {\n            page_objects_1.dashboardPage.takeScreenshot('upcoming-reviews');\n            // Check if there are reviews or a \"no reviews\" message\n            if ($body.find('[data-testid=\"review-item\"]').length > 0) {\n                cy.get('[data-testid=\"review-item\"]').should('have.length.at.least', 1);\n            }\n            else if ($body.find('[data-testid=\"no-upcoming-reviews\"]').length > 0) {\n                cy.get('[data-testid=\"no-upcoming-reviews\"]').should('be.visible');\n            }\n        }\n        else {\n            cy.log('Upcoming reviews section not found - it may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-upcoming-reviews-section');\n        }\n    });\n});",
              "err": {},
              "uuid": "5994db9f-e354-4bbe-8167-e95d5b8c33f0",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display learning progress if available",
              "fullTitle": "Dashboard should display learning progress if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check for learning progress section\n    cy.get('body').then(function ($body) {\n        var hasProgressSection = $body.find('[data-testid=\"learning-progress-section\"]').length > 0;\n        if (hasProgressSection) {\n            page_objects_1.dashboardPage.takeScreenshot('learning-progress');\n        }\n        else {\n            cy.log('Learning progress section not found - it may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-learning-progress');\n        }\n    });\n});",
              "err": {},
              "uuid": "28d176ee-8ff9-4a84-b722-4d3c36d17fa2",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display recent resources if available",
              "fullTitle": "Dashboard should display recent resources if available",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check if dashboard has content using hasContent method\n    page_objects_1.dashboardPage.hasContent().then(function (hasContent) {\n        if (hasContent) {\n            page_objects_1.dashboardPage.takeScreenshot('dashboard-with-content');\n        }\n        else {\n            cy.log('No resources or concepts found on dashboard');\n            page_objects_1.dashboardPage.takeScreenshot('empty-dashboard');\n        }\n    });\n    // Get resource count to see if there are any\n    page_objects_1.dashboardPage.getResourceCount().then(function (count) {\n        if (count > 0) {\n            cy.log(\"Found \".concat(count, \" resources on dashboard\"));\n        }\n        else {\n            cy.log('No resources found on dashboard');\n        }\n    });\n});",
              "err": {},
              "uuid": "6cd673c4-b834-47d8-9817-aa9a738a37d1",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow searching if implemented",
              "fullTitle": "Dashboard should allow searching if implemented",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the dashboard is loaded\npage_objects_1.dashboardPage.isDashboardLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Dashboard not loaded properly, skipping test');\n        page_objects_1.dashboardPage.takeScreenshot('dashboard-not-loaded');\n        return;\n    }\n    // Check if search input exists\n    cy.get('body').then(function ($body) {\n        var hasSearchInput = $body.find('[data-testid=\"search-input\"]').length > 0;\n        if (hasSearchInput) {\n            // Perform a test search\n            page_objects_1.dashboardPage.search('test');\n            page_objects_1.dashboardPage.takeScreenshot('search-results');\n        }\n        else {\n            cy.log('Search functionality not found - it may not be implemented yet');\n            page_objects_1.dashboardPage.takeScreenshot('no-search-functionality');\n        }\n    });\n});",
              "err": {},
              "uuid": "fa8ac09a-e549-4355-8372-b192cdb78d57",
              "parentUUID": "2b5132d8-93b5-4027-98b0-5acae4bfa0b2",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c45e2be1-e5ad-40d7-a23e-3e2a7d0f676b"
          ],
          "pending": [],
          "skipped": [
            "0a4a832f-b3db-4966-b25a-d6e9dc95a77a",
            "75c306d5-adf4-43f0-a3ef-d6d02b05e507",
            "db23a58e-09c8-420a-8a98-803e92692667",
            "b3d24301-f473-4905-ab0a-346533b1c349",
            "5994db9f-e354-4bbe-8167-e95d5b8c33f0",
            "28d176ee-8ff9-4a84-b722-4d3c36d17fa2",
            "6cd673c4-b834-47d8-9817-aa9a738a37d1",
            "fa8ac09a-e549-4355-8372-b192cdb78d57"
          ],
          "duration": 591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}