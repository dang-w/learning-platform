{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-22T09:27:40.755Z",
    "end": "2025-03-22T09:27:43.933Z",
    "duration": 3178,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "828331ab-83ea-4504-a749-439a67c2357b",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/knowledge-spaced-repetition.cy.ts",
      "file": "e2e-testing/cypress/e2e/knowledge-spaced-repetition.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1db88b6e-b173-44b9-a508-552e6bc48df8",
          "title": "Knowledge Management - Spaced Repetition",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have basic HTML elements",
              "fullTitle": "Knowledge Management - Spaced Repetition should have basic HTML elements",
              "timedOut": null,
              "duration": 3123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/knowledge-spaced-repetition.cy.ts/spaced-repetition-initial-page.png\"\n    ]\n  ]\n}",
              "code": "// Check for basic elements and output to console for debugging\ncy.get('html').should('exist');\ncy.get('body').should('exist').then(function ($body) {\n    console.log(\"BODY TEXT: \".concat($body.text().substring(0, 300), \"...\"));\n    console.log(\"BODY HTML: \".concat($body.html().substring(0, 300), \"...\"));\n});\n// Check for headings\ncy.get('h1, h2, h3').then(function ($headings) {\n    console.log(\"FOUND \".concat($headings.length, \" HEADINGS\"));\n    if ($headings.length > 0) {\n        $headings.each(function (index, heading) {\n            console.log(\"HEADING \".concat(index, \": \").concat(Cypress.$(heading).text()));\n        });\n    }\n});\n// Look for any buttons\ncy.get('button').then(function ($buttons) {\n    console.log(\"FOUND \".concat($buttons.length, \" BUTTONS\"));\n    if ($buttons.length > 0) {\n        $buttons.each(function (index, button) {\n            console.log(\"BUTTON \".concat(index, \": \").concat(Cypress.$(button).text()));\n        });\n    }\n});\n// Look for common data-testid attributes\n['review-dashboard', 'concepts-list', 'start-review-button', 'nav-knowledge-stats', 'nav-concepts'].forEach(function (testId) {\n    cy.get(\"body\").then(function ($body) {\n        var hasElement = $body.find(\"[data-testid=\\\"\".concat(testId, \"\\\"]\")).length > 0;\n        console.log(\"HAS [data-testid=\\\"\".concat(testId, \"\\\"]: \").concat(hasElement));\n    });\n});",
              "err": {},
              "uuid": "3659b218-6441-452f-bdf9-337bc38ef717",
              "parentUUID": "1db88b6e-b173-44b9-a508-552e6bc48df8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3659b218-6441-452f-bdf9-337bc38ef717"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}