{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-31T14:35:47.706Z",
    "end": "2025-03-31T14:35:50.619Z",
    "duration": 2913,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "d657dc81-819c-4691-87ad-6f87163e1806",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/profile.cy.ts",
      "file": "e2e-testing/cypress/e2e/profile.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
          "title": "User Profile",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display user profile information",
              "fullTitle": "User Profile should display user profile information",
              "timedOut": null,
              "duration": 676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information (failed).png\"\n    ],\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information (failed) (attempt 2).png\"\n    ],\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "cy.get('input[id=\"email\"]').should('have.value', testUser.email);\ncy.get('input[id=\"fullName\"]').should('have.value', \"\".concat(testUser.firstName, \" \").concat(testUser.lastName));",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/profile\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User Profile`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/profile\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User Profile`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132351:76)\n    at visitFailedByErr (http://localhost:3000/__cypress/runner/cypress_runner.js:131757:12)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132334:13)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/profile.cy.ts:72:0)",
                "diff": null
              },
              "uuid": "f587aaf9-93b1-44ed-b19b-b3b5fa933dab",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow updating profile information",
              "fullTitle": "User Profile should allow updating profile information",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Fill out the form\ncy.get('input[id=\"email\"]').clear().type('new@example.com');\ncy.get('input[id=\"fullName\"]').clear().type('New Name');\n// Submit the form\ncy.get('[data-testid=\"save-profile-button\"]').click();\n// Check if the button returns to its original state\n// This indicates the submission completed (whether successful or not)\ncy.get('[data-testid=\"save-profile-button\"]', { timeout: 10000 })\n    .should('be.visible')\n    .and('contain', 'Save Changes');\n// In our test environment, an error might occur due to mocked API\n// Simply verify that the form submission completes and the button returns to normal\n// This is sufficient to test the form interaction without asserting success/failure",
              "err": {},
              "uuid": "dca301f7-f13a-4b0f-983e-c87e22bb6d2a",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display account statistics",
              "fullTitle": "User Profile should display account statistics",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on statistics tab\ncy.get('[data-testid=\"statistics-tab\"]').click();\n// Verify statistics are displayed\ncy.get('[data-testid=\"account-statistics\"]', { timeout: 10000 }).should('be.visible');\n// Verify statistics content\ncy.contains('Total Courses Enrolled').should('be.visible');\ncy.contains('Completed Courses').should('be.visible');\ncy.contains('Average Score').should('be.visible');",
              "err": {},
              "uuid": "a63cfb1f-d7af-4cd8-b91c-f07fcf364b04",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle notification preferences",
              "fullTitle": "User Profile should handle notification preferences",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on notifications tab\ncy.get('[data-testid=\"notifications-tab\"]').click();\n// Verify notification settings are displayed\ncy.get('[data-testid=\"notifications-settings\"]', { timeout: 10000 }).should('be.visible');\n// Toggle email notifications\ncy.get('[data-testid=\"email-notifications-toggle\"]').click();\n// Due to no specific success element in the component, we'll just verify the toggle was clicked\n// The UI should update the toggle state\ncy.get('[data-testid=\"email-notifications-toggle\"]').should('be.visible');",
              "err": {},
              "uuid": "1ae68fc9-fa21-425b-a2db-3e6acff3c98b",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle data export",
              "fullTitle": "User Profile should handle data export",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on export tab\ncy.get('[data-testid=\"export-tab\"]').click();\n// Verify export section is displayed\ncy.get('[data-testid=\"data-export\"]', { timeout: 10000 }).should('be.visible');\n// Click export button\ncy.get('[data-testid=\"export-data-button\"]').click();\n// Verify the button text remains as \"Export My Data\" (we're not actually testing the download)\ncy.get('[data-testid=\"export-data-button\"]').contains('Export My Data');",
              "err": {},
              "uuid": "16d06e4a-9264-4653-8325-fcd85c3c2d5f",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle account deletion flow",
              "fullTitle": "User Profile should handle account deletion flow",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on account tab\ncy.get('[data-testid=\"account-tab\"]').click();\n// Verify delete account section is displayed\ncy.get('[data-testid=\"delete-account-section\"]', { timeout: 10000 }).should('be.visible');\n// Click delete account button\ncy.get('[data-testid=\"delete-account-button\"]').click();\n// Verify confirmation dialog appears\ncy.get('[data-testid=\"delete-account-confirmation\"]').should('be.visible');\n// Confirm deletion\ncy.get('[data-testid=\"confirm-delete-button\"]').click();\n// Verify redirection to login page\ncy.url().should('include', '/auth/login');",
              "err": {},
              "uuid": "cca435b8-c260-4594-a92f-33e419c7ce06",
              "parentUUID": "e0a484d3-0775-4df3-9dee-ac3ae0a0c7d3",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f587aaf9-93b1-44ed-b19b-b3b5fa933dab"
          ],
          "pending": [],
          "skipped": [
            "dca301f7-f13a-4b0f-983e-c87e22bb6d2a",
            "a63cfb1f-d7af-4cd8-b91c-f07fcf364b04",
            "1ae68fc9-fa21-425b-a2db-3e6acff3c98b",
            "16d06e4a-9264-4653-8325-fcd85c3c2d5f",
            "cca435b8-c260-4594-a92f-33e419c7ce06"
          ],
          "duration": 676,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}