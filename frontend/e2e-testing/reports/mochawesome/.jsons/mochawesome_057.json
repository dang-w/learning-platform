{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-24T13:00:30.370Z",
    "end": "2025-03-24T13:00:38.323Z",
    "duration": 7953,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "523d6ec2-d907-4696-882a-769a80cbf38b",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/knowledge-test-page.cy.ts",
      "file": "e2e-testing/cypress/e2e/knowledge-test-page.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bea0691-5a33-440b-9399-6148ff282d1d",
          "title": "Knowledge Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the knowledge page with basic navigation elements",
              "fullTitle": "Knowledge Page should display the knowledge page with basic navigation elements",
              "timedOut": null,
              "duration": 2235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/knowledge-test-page.cy.ts/knowledge-page-initial.png\"\n    ]\n  ]\n}",
              "code": "// Verify the heading exists (more generic)\ncy.get('h1, h2').should('exist');\n// Look for common navigation/tab elements\ncy.get('a, button, [role=\"tab\"]').should('exist');",
              "err": {},
              "uuid": "a5d3d6a1-9f5d-488b-8907-99880ce966cd",
              "parentUUID": "2bea0691-5a33-440b-9399-6148ff282d1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow interaction with knowledge content if available",
              "fullTitle": "Knowledge Page should allow interaction with knowledge content if available",
              "timedOut": null,
              "duration": 3340,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/knowledge-test-page.cy.ts/knowledge-page-initial (1).png\",\n      \"/knowledge-test-page.cy.ts/knowledge-content-view.png\"\n    ]\n  ]\n}",
              "code": "// Check if add button exists and is clickable\ncy.get('body').then(function ($body) {\n    var hasAddButton = $body.find('button:contains(\"Add\"), [data-testid*=\"add\"]').length > 0;\n    if (hasAddButton) {\n        cy.get('button:contains(\"Add\"), [data-testid*=\"add\"]').first().click();\n        // Check if a form or modal appears\n        cy.get('form, [role=\"dialog\"], .modal').should('exist');\n        // Close the form/modal by clicking cancel or close button if found\n        cy.get('button:contains(\"Cancel\"), button:contains(\"Close\"), [aria-label=\"Close\"]')\n            .first()\n            .click({ force: true });\n    }\n    else {\n        // If no add button, just verify the page has some content\n        // Look for common UI elements in a knowledge page\n        cy.get('div, p, span, table, ul, ol')\n            .should('exist')\n            .and('be.visible');\n        // Take a screenshot to verify the content manually\n        cy.screenshot('knowledge-content-view');\n    }\n});",
              "err": {},
              "uuid": "0658eb50-99d0-405d-bea2-7af6ee30f5e0",
              "parentUUID": "2bea0691-5a33-440b-9399-6148ff282d1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate between different sections if navigation exists",
              "fullTitle": "Knowledge Page should navigate between different sections if navigation exists",
              "timedOut": null,
              "duration": 1865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/knowledge-test-page.cy.ts/knowledge-page-initial (2).png\"\n    ]\n  ]\n}",
              "code": "// Look for navigation elements\ncy.get('body').then(function ($body) {\n    var hasTabs = $body.find('[role=\"tab\"], .tab, button[data-testid*=\"tab\"]').length > 0;\n    if (hasTabs) {\n        // Click the second tab if it exists\n        cy.get('[role=\"tab\"], .tab, button[data-testid*=\"tab\"]')\n            .eq(1)\n            .click({ force: true });\n        // Verify some content changes\n        cy.get('.tab-content, .content').should('exist');\n    }\n    else {\n        // If no tabs, look for other navigation like sidebar or links\n        cy.get('nav a, .sidebar a, .navigation-item').should('exist');\n    }\n});",
              "err": {},
              "uuid": "b29e0046-f4d5-4e4c-9432-edca12241e66",
              "parentUUID": "2bea0691-5a33-440b-9399-6148ff282d1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5d3d6a1-9f5d-488b-8907-99880ce966cd",
            "0658eb50-99d0-405d-bea2-7af6ee30f5e0",
            "b29e0046-f4d5-4e4c-9432-edca12241e66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}