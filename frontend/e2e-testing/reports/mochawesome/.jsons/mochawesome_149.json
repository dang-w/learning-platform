{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-31T14:35:25.616Z",
    "end": "2025-03-31T14:35:31.245Z",
    "duration": 5629,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4c76ebd8-fa4f-4b55-8dff-c0604bd1dd86",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/learning-path-roadmap.cy.ts",
      "file": "e2e-testing/cypress/e2e/learning-path-roadmap.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e08d6273-b142-46e6-a72d-585276e460fe",
          "title": "Learning Path - Roadmap Visualization",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the learning path roadmap",
              "fullTitle": "Learning Path - Roadmap Visualization should display the learning path roadmap",
              "timedOut": null,
              "duration": 1084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/learning-path-roadmap.cy.ts/Learning Path - Roadmap Visualization -- should display the learning path roadmap (failed).png\"\n    ],\n    [\n      \"/learning-path-roadmap.cy.ts/Learning Path - Roadmap Visualization -- should display the learning path roadmap (failed) (attempt 2).png\"\n    ],\n    [\n      \"/learning-path-roadmap.cy.ts/Learning Path - Roadmap Visualization -- should display the learning path roadmap -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check that the roadmap visualization is displayed\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (isVisible) {\n            cy.log('Roadmap visualization is visible');\n        }\n        else {\n            cy.log('Roadmap visualization is not visible');\n            return;\n        }\n    });\n    // Check that the goals are displayed on the roadmap\n    page_objects_1.learningPathPage.getRoadmapGoalsCount().then(function (count) {\n        cy.wrap(count).should('be.at.least', 1);\n    });\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.visit()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Learning Path - Roadmap Vis...`",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.visit()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Learning Path - Roadmap Vis...`\n    at cy.<computed> [as log] (http://localhost:3000/__cypress/runner/cypress_runner.js:138922:64)\n    at $Cy.eval (webpack:///./cypress/e2e/learning-path-roadmap.cy.ts:19:0)\n    at listener (http://localhost:3000/__cypress/runner/cypress_runner.js:140914:19)\n    at arrayMap (http://localhost:3000/__cypress/runner/cypress_runner.js:18631:23)\n    at map (http://localhost:3000/__cypress/runner/cypress_runner.js:27600:14)\n    at $Cy.emitMap (http://localhost:3000/__cypress/runner/cypress_runner.js:140916:14)\n    at parent.<computed> [as emitMap] (http://localhost:3000/__cypress/runner/cypress_runner.js:140879:32)\n    at $Cypress.action (http://localhost:3000/__cypress/runner/cypress_runner.js:41667:21)\n    at $Cy.onUncaughtException (http://localhost:3000/__cypress/runner/cypress_runner.js:139049:38)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:139225:28)\n    at onUncaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js:1850:50)\n    at onCaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js:1806:16)\n    at logCaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:6961:13)\n    at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:3501:74)\n    at inst.componentDidCatch.update.callback (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:7002:13)\n    at callCallback (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:5206:18)\n    at commitCallbacks (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:5214:130)\n    at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:3501:74)\n    at commitClassCallbacks (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:7935:17)\n    at commitLayoutEffectOnFiber (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8243:31)\n    at recursivelyTraverseLayoutEffects (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8700:105)\n    at commitLayoutEffectOnFiber (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8231:17)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/support/commands.ts:234:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/support/commands.ts:234:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "39967c7d-f5a4-49da-973c-7aba89a8f099",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow viewing goal details from the roadmap",
              "fullTitle": "Learning Path - Roadmap Visualization should allow viewing goal details from the roadmap",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if there are any goals in the roadmap\n        page_objects_1.learningPathPage.getRoadmapGoalsCount().then(function (count) {\n            if (count === 0) {\n                cy.log('No goals found in the roadmap, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('no-roadmap-goals');\n                return;\n            }\n            // Click on a goal in the roadmap\n            page_objects_1.learningPathPage.clickFirstRoadmapGoal();\n            // Check that the goal details modal is displayed\n            page_objects_1.learningPathPage.isGoalDetailsModalVisible().then(function (isModalVisible) {\n                cy.wrap(isModalVisible).should('be.true');\n                // Check that all goal details are displayed\n                page_objects_1.learningPathPage.areGoalDetailsDisplayed().then(function (areDetailsDisplayed) {\n                    cy.wrap(areDetailsDisplayed).should('be.true');\n                });\n                // Close the modal\n                page_objects_1.learningPathPage.closeGoalDetailsModal();\n                // Verify the modal is closed\n                page_objects_1.learningPathPage.isGoalDetailsModalVisible().then(function (isStillVisible) {\n                    cy.wrap(isStillVisible).should('be.false');\n                });\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "818cf861-7c97-4b7d-bc57-1956e902b2a0",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow updating goal status from the roadmap",
              "fullTitle": "Learning Path - Roadmap Visualization should allow updating goal status from the roadmap",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if there are any goals in the roadmap\n        page_objects_1.learningPathPage.getRoadmapGoalsCount().then(function (count) {\n            if (count === 0) {\n                cy.log('No goals found in the roadmap, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('no-roadmap-goals');\n                return;\n            }\n            // Click on a goal in the roadmap\n            page_objects_1.learningPathPage.clickFirstRoadmapGoal();\n            // Check that the goal details modal is displayed\n            page_objects_1.learningPathPage.isGoalDetailsModalVisible().then(function (isModalVisible) {\n                if (!isModalVisible) {\n                    cy.log('Goal details modal is not visible, skipping test');\n                    page_objects_1.learningPathPage.takeScreenshot('goal-details-modal-not-visible');\n                    return;\n                }\n                // Update the goal status to in-progress\n                page_objects_1.learningPathPage.updateGoalStatusToInProgress();\n                // Verify the modal is closed after updating\n                page_objects_1.learningPathPage.isGoalDetailsModalVisible().then(function (isStillVisible) {\n                    cy.wrap(isStillVisible).should('be.false');\n                });\n                // Check that the goal status is updated in the roadmap\n                page_objects_1.learningPathPage.firstRoadmapGoalHasStatus('in_progress').then(function (hasCorrectStatus) {\n                    cy.wrap(hasCorrectStatus).should('be.true');\n                });\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "3ac68fc7-5c40-4a79-9a47-0452c7c3041a",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow adding milestones to a goal",
              "fullTitle": "Learning Path - Roadmap Visualization should allow adding milestones to a goal",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if there are any goals in the roadmap\n        page_objects_1.learningPathPage.getRoadmapGoalsCount().then(function (count) {\n            if (count === 0) {\n                cy.log('No goals found in the roadmap, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('no-roadmap-goals');\n                return;\n            }\n            // Click on a goal in the roadmap\n            page_objects_1.learningPathPage.clickFirstRoadmapGoal();\n            // Check that the goal details modal is displayed\n            page_objects_1.learningPathPage.isGoalDetailsModalVisible().then(function (isModalVisible) {\n                if (!isModalVisible) {\n                    cy.log('Goal details modal is not visible, skipping test');\n                    page_objects_1.learningPathPage.takeScreenshot('goal-details-modal-not-visible');\n                    return;\n                }\n                // Create a unique milestone title\n                var milestoneTitle = \"Test Milestone \".concat(Date.now());\n                // Add a milestone to the goal\n                page_objects_1.learningPathPage.addMilestoneToGoal({\n                    title: milestoneTitle,\n                    description: 'Test milestone description',\n                    deadline: '2023-12-31'\n                });\n                // Check that the milestone is added to the goal\n                page_objects_1.learningPathPage.milestoneExists(milestoneTitle).then(function (exists) {\n                    cy.wrap(exists).should('be.true');\n                });\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "4f7093e6-9b2c-4a17-9adb-2d6964c97b3c",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow filtering the roadmap by status",
              "fullTitle": "Learning Path - Roadmap Visualization should allow filtering the roadmap by status",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if roadmap filters are available\n        cy.get('body').then(function ($body) {\n            var hasFilters = $body.find('[data-testid=\"roadmap-filters\"]').length > 0;\n            if (!hasFilters) {\n                cy.log('Roadmap filters are not available, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('roadmap-filters-not-available');\n                return;\n            }\n            // Filter by status\n            page_objects_1.learningPathPage.filterRoadmapByInProgressStatus();\n            // Check that the URL includes the filter parameter\n            cy.url().should('include', 'status=in_progress');\n            // Check that the roadmap visualization is still visible after filtering\n            page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isStillVisible) {\n                cy.wrap(isStillVisible).should('be.true');\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "bd73a024-3c9e-418a-b2b9-b814cc039b99",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow filtering the roadmap by priority",
              "fullTitle": "Learning Path - Roadmap Visualization should allow filtering the roadmap by priority",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if roadmap filters are available\n        cy.get('body').then(function ($body) {\n            var hasFilters = $body.find('[data-testid=\"roadmap-filters\"]').length > 0;\n            if (!hasFilters) {\n                cy.log('Roadmap filters are not available, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('roadmap-filters-not-available');\n                return;\n            }\n            // Filter by priority\n            page_objects_1.learningPathPage.filterRoadmapByHighPriority();\n            // Check that the URL includes the filter parameter\n            cy.url().should('include', 'priority=high');\n            // Check that the roadmap visualization is still visible after filtering\n            page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isStillVisible) {\n                cy.wrap(isStillVisible).should('be.true');\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "c4e63d92-dda6-4548-a146-509404d74e39",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow viewing the roadmap in timeline view",
              "fullTitle": "Learning Path - Roadmap Visualization should allow viewing the roadmap in timeline view",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if learning path page loaded properly\npage_objects_1.learningPathPage.isLearningPathLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Learning Path page not loaded properly, skipping test');\n        page_objects_1.learningPathPage.takeScreenshot('learning-path-not-loaded');\n        return;\n    }\n    // Check if roadmap visualization is visible\n    page_objects_1.learningPathPage.isRoadmapVisualizationVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Roadmap visualization is not visible, skipping test');\n            page_objects_1.learningPathPage.takeScreenshot('roadmap-visualization-not-visible');\n            return;\n        }\n        // Check if view controls are available\n        cy.get('body').then(function ($body) {\n            var hasViewControls = $body.find('[data-testid=\"roadmap-view-controls\"]').length > 0;\n            if (!hasViewControls) {\n                cy.log('Roadmap view controls are not available, skipping test');\n                page_objects_1.learningPathPage.takeScreenshot('roadmap-view-controls-not-available');\n                return;\n            }\n            // Switch to timeline view\n            page_objects_1.learningPathPage.switchToTimelineView();\n            // Check that the URL includes the view parameter\n            cy.url().should('include', 'view=timeline');\n            // Check that the timeline visualization is visible\n            page_objects_1.learningPathPage.isTimelineVisualizationVisible().then(function (isTimelineVisible) {\n                cy.wrap(isTimelineVisible).should('be.true');\n                // Check that the goals are displayed on the timeline\n                page_objects_1.learningPathPage.getTimelineGoalsCount().then(function (count) {\n                    cy.wrap(count).should('be.at.least', 1);\n                });\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "98640180-49d1-4b78-b82d-b77f2d40ceee",
              "parentUUID": "e08d6273-b142-46e6-a72d-585276e460fe",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "39967c7d-f5a4-49da-973c-7aba89a8f099"
          ],
          "pending": [],
          "skipped": [
            "818cf861-7c97-4b7d-bc57-1956e902b2a0",
            "3ac68fc7-5c40-4a79-9a47-0452c7c3041a",
            "4f7093e6-9b2c-4a17-9adb-2d6964c97b3c",
            "bd73a024-3c9e-418a-b2b9-b814cc039b99",
            "c4e63d92-dda6-4548-a146-509404d74e39",
            "98640180-49d1-4b78-b82d-b77f2d40ceee"
          ],
          "duration": 1084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}