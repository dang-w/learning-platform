{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-24T10:17:47.058Z",
    "end": "2025-03-24T10:18:50.853Z",
    "duration": 63795,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "b8b1b403-2c4c-4919-be61-65d4dc9dca78",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/profile.cy.ts",
      "file": "e2e-testing/cypress/e2e/profile.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
          "title": "User Profile",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display user profile information",
              "fullTitle": "User Profile should display user profile information",
              "timedOut": null,
              "duration": 21081,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information (failed).png\"\n    ],\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information (failed) (attempt 2).png\"\n    ],\n    [\n      \"/profile.cy.ts/User Profile -- should display user profile information -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "// Verify profile info elements are visible and contain correct data\ncy.get('[data-testid=\"profile-username\"]')\n    .should('be.visible')\n    .and('have.value', testUser.username);\ncy.get('[data-testid=\"profile-email\"]')\n    .should('be.visible')\n    .and('have.value', testUser.email);\ncy.get('[data-testid=\"profile-full-name\"]')\n    .should('be.visible')\n    .and('have.value', testUser.fullName);\n// Take screenshot of profile page\nprofilePage.takeScreenshot('profile-information');",
              "err": {
                "message": "CypressError: Timed out retrying after 20000ms: `cy.wait()` timed out waiting `20000ms` for the 1st request to the route: `getProfile`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User Profile`",
                "estack": "CypressError: Timed out retrying after 20000ms: `cy.wait()` timed out waiting `20000ms` for the 1st request to the route: `getProfile`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User Profile`\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:75176:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:75230:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:136105:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:136131:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:144517:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:144458:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/e2e/profile.cy.ts:64:0)",
                "diff": null
              },
              "uuid": "ac0a0ac1-6617-4408-8127-b3c1a72ba545",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow updating profile information",
              "fullTitle": "User Profile should allow updating profile information",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup update profile intercept\ncy.intercept('PUT', '**/api/users/profile', {\n    statusCode: 200,\n    body: {\n        message: 'Profile updated successfully'\n    }\n}).as('updateProfile');\n// Update profile info with unique name\nvar newName = \"Test User \".concat(Date.now());\ncy.get('[data-testid=\"profile-full-name\"]').clear().type(newName);\ncy.get('[data-testid=\"save-profile-button\"]').click();\n// Wait for update request and verify success message\ncy.wait('@updateProfile');\ncy.get('[data-testid=\"profile-success\"]').should('be.visible');\nprofilePage.takeScreenshot('profile-update-success');",
              "err": {},
              "uuid": "fc50cb69-2cc2-4c8c-a8fb-6e07a1f9feb7",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display account statistics",
              "fullTitle": "User Profile should display account statistics",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click the statistics tab\ncy.get('[data-testid=\"statistics-tab\"]').click();\ncy.get('[data-testid=\"account-statistics\"]').should('be.visible');\n// Verify statistics values\ncy.contains('Total Courses Enrolled').parent().find('dd').should('contain', '5');\ncy.contains('Completed Courses').parent().find('dd').should('contain', '3');\ncy.contains('Average Score').parent().find('dd').should('contain', '85');\ncy.contains('Total Time Spent').parent().find('dd').should('contain', '24');\nprofilePage.takeScreenshot('account-statistics');",
              "err": {},
              "uuid": "65c93360-6e15-4f5f-ba83-2fb62f38a1e5",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle notification preferences",
              "fullTitle": "User Profile should handle notification preferences",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup notification preferences update intercept\ncy.intercept('PUT', '**/api/users/notification-preferences', {\n    statusCode: 200,\n    body: {\n        emailNotifications: false,\n        courseUpdates: true,\n        marketingEmails: false\n    }\n}).as('updateNotifications');\n// Click the notifications tab\ncy.get('[data-testid=\"notifications-tab\"]').click();\ncy.get('[data-testid=\"notifications-settings\"]').should('be.visible');\n// Toggle email notifications\ncy.get('[data-testid=\"email-notifications-toggle\"]').click();\n// Wait for update request\ncy.wait('@updateNotifications');\nprofilePage.takeScreenshot('notification-preferences');",
              "err": {},
              "uuid": "063063fc-3ad2-4955-a343-3be7b15ba43a",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle data export",
              "fullTitle": "User Profile should handle data export",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup data export intercept\ncy.intercept('GET', '**/api/users/export', {\n    statusCode: 200,\n    body: {\n        user: {\n            id: 'user123',\n            username: testUser.username,\n            email: testUser.email\n        },\n        data: {\n            courses: [],\n            progress: {},\n            preferences: {}\n        }\n    }\n}).as('exportData');\n// Click the export tab\ncy.get('[data-testid=\"export-tab\"]').click();\ncy.get('[data-testid=\"data-export\"]').should('be.visible');\n// Click export button and verify loading state\ncy.get('[data-testid=\"export-data-button\"]').click();\ncy.get('[data-testid=\"export-data-button\"]').should('contain', 'Exporting...');\n// Wait for export request\ncy.wait('@exportData');\nprofilePage.takeScreenshot('data-export');",
              "err": {},
              "uuid": "2f6f838d-c5de-4135-8d65-a0fc26698f4a",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should handle account deletion flow",
              "fullTitle": "User Profile should handle account deletion flow",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup account deletion intercept\ncy.intercept('DELETE', '**/api/users/account', {\n    statusCode: 200,\n    body: {\n        message: 'Account deleted successfully'\n    }\n}).as('deleteAccount');\n// Click the account tab\ncy.get('[data-testid=\"account-tab\"]').click();\ncy.get('[data-testid=\"delete-account-section\"]').should('be.visible');\n// Click delete button and verify confirmation dialog\ncy.get('[data-testid=\"delete-account-button\"]').click();\ncy.get('[data-testid=\"delete-account-confirmation\"]').should('be.visible');\nprofilePage.takeScreenshot('account-deletion');",
              "err": {},
              "uuid": "5fa7fae4-6943-45de-a87c-bf8b5d85fe5c",
              "parentUUID": "b11e847c-e2fc-4bd2-8886-51d6188e27b0",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ac0a0ac1-6617-4408-8127-b3c1a72ba545"
          ],
          "pending": [],
          "skipped": [
            "fc50cb69-2cc2-4c8c-a8fb-6e07a1f9feb7",
            "65c93360-6e15-4f5f-ba83-2fb62f38a1e5",
            "063063fc-3ad2-4955-a343-3be7b15ba43a",
            "2f6f838d-c5de-4135-8d65-a0fc26698f4a",
            "5fa7fae4-6943-45de-a87c-bf8b5d85fe5c"
          ],
          "duration": 21081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}