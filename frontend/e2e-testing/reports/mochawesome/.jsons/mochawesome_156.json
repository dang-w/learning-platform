{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-31T14:38:42.238Z",
    "end": "2025-03-31T14:38:45.843Z",
    "duration": 3605,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "3ec0cf40-f8bf-4ba7-abf5-a6529d8f6e76",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/analytics.cy.ts",
      "file": "e2e-testing/cypress/e2e/analytics.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
          "title": "Progress Analytics",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display analytics overview",
              "fullTitle": "Progress Analytics should display analytics overview",
              "timedOut": null,
              "duration": 1028,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/analytics.cy.ts/Progress Analytics -- should display analytics overview (failed).png\"\n    ],\n    [\n      \"/analytics.cy.ts/Progress Analytics -- should display analytics overview (failed) (attempt 2).png\"\n    ],\n    [\n      \"/analytics.cy.ts/Progress Analytics -- should display analytics overview -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "// Check if analytics page loaded properly\npage_objects_1.analyticsPage.isAnalyticsPageLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Analytics page not loaded properly, skipping test');\n        page_objects_1.analyticsPage.takeScreenshot('analytics-not-loaded');\n        return;\n    }\n    // Take screenshot for documentation\n    page_objects_1.analyticsPage.takeScreenshot('analytics-overview');\n    // Verify overview charts are visible\n    page_objects_1.analyticsPage.verifyOverviewChartVisible().then(function (isVisible) {\n        expect(isVisible).to.be.true;\n    });\n    page_objects_1.analyticsPage.verifyUsageChartVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Usage chart not visible, could be a feature in development');\n        }\n    });\n    page_objects_1.analyticsPage.verifyProgressChartVisible().then(function (isVisible) {\n        if (!isVisible) {\n            cy.log('Progress chart not visible, could be a feature in development');\n        }\n    });\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.visit()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Progress Analytics`",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.visit()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Progress Analytics`\n    at cy.<computed> [as log] (http://localhost:3000/__cypress/runner/cypress_runner.js:138922:64)\n    at $Cy.eval (webpack:///./cypress/e2e/analytics.cy.ts:18:0)\n    at listener (http://localhost:3000/__cypress/runner/cypress_runner.js:140914:19)\n    at arrayMap (http://localhost:3000/__cypress/runner/cypress_runner.js:18631:23)\n    at map (http://localhost:3000/__cypress/runner/cypress_runner.js:27600:14)\n    at $Cy.emitMap (http://localhost:3000/__cypress/runner/cypress_runner.js:140916:14)\n    at parent.<computed> [as emitMap] (http://localhost:3000/__cypress/runner/cypress_runner.js:140879:32)\n    at $Cypress.action (http://localhost:3000/__cypress/runner/cypress_runner.js:41667:21)\n    at $Cy.onUncaughtException (http://localhost:3000/__cypress/runner/cypress_runner.js:139049:38)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:139225:28)\n    at onUncaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js:1850:50)\n    at onCaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_client_43e3ffb8._.js:1806:16)\n    at logCaughtError (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:6961:13)\n    at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:3501:74)\n    at inst.componentDidCatch.update.callback (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:7002:13)\n    at callCallback (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:5206:18)\n    at commitCallbacks (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:5214:130)\n    at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:3501:74)\n    at commitClassCallbacks (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:7935:17)\n    at commitLayoutEffectOnFiber (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8243:31)\n    at recursivelyTraverseLayoutEffects (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8700:105)\n    at commitLayoutEffectOnFiber (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8231:17)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/support/commands.ts:234:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/support/commands.ts:234:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "87ea8e4d-1470-4645-a83c-4a0fd7f55b3c",
              "parentUUID": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow filtering analytics by date range",
              "fullTitle": "Progress Analytics should allow filtering analytics by date range",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if analytics page loaded properly\npage_objects_1.analyticsPage.isAnalyticsPageLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Analytics page not loaded properly, skipping test');\n        page_objects_1.analyticsPage.takeScreenshot('analytics-not-loaded');\n        return;\n    }\n    // Set custom date range\n    var endDate = new Date().toISOString().split('T')[0];\n    var startDate = new Date();\n    startDate.setMonth(startDate.getMonth() - 3);\n    var formattedStartDate = startDate.toISOString().split('T')[0];\n    // Set date range using page object\n    page_objects_1.analyticsPage.setDateRange(formattedStartDate, endDate);\n    // Take screenshot after filter applied\n    page_objects_1.analyticsPage.takeScreenshot('analytics-filtered');\n    // Verify charts are updated after filtering\n    page_objects_1.analyticsPage.verifyOverviewChartVisible().then(function (isVisible) {\n        expect(isVisible).to.be.true;\n    });\n    // Reset filters\n    page_objects_1.analyticsPage.resetFilters();\n    page_objects_1.analyticsPage.takeScreenshot('analytics-filters-reset');\n});",
              "err": {},
              "uuid": "5eed2cfd-f35b-4f84-863d-072df298aa05",
              "parentUUID": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display various analytics tabs",
              "fullTitle": "Progress Analytics should display various analytics tabs",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if analytics page loaded properly\npage_objects_1.analyticsPage.isAnalyticsPageLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Analytics page not loaded properly, skipping test');\n        page_objects_1.analyticsPage.takeScreenshot('analytics-not-loaded');\n        return;\n    }\n    // Switch to resources tab\n    page_objects_1.analyticsPage.switchToTab('resources');\n    page_objects_1.analyticsPage.verifyResourceStatsVisible().then(function (isVisible) {\n        if (isVisible) {\n            page_objects_1.analyticsPage.takeScreenshot('resources-analytics');\n        }\n        else {\n            cy.log('Resource stats not visible, could be a feature in development');\n        }\n    });\n    // Switch to concepts tab\n    page_objects_1.analyticsPage.switchToTab('concepts');\n    page_objects_1.analyticsPage.verifyConceptStatsVisible().then(function (isVisible) {\n        if (isVisible) {\n            page_objects_1.analyticsPage.takeScreenshot('concepts-analytics');\n        }\n        else {\n            cy.log('Concept stats not visible, could be a feature in development');\n        }\n    });\n    // Switch back to overview tab\n    page_objects_1.analyticsPage.switchToTab('overview');\n    page_objects_1.analyticsPage.verifyOverviewChartVisible().then(function (isVisible) {\n        expect(isVisible).to.be.true;\n    });\n});",
              "err": {},
              "uuid": "007f4126-bf2c-4371-8654-9e5b610ebb21",
              "parentUUID": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow exporting analytics data",
              "fullTitle": "Progress Analytics should allow exporting analytics data",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if analytics page loaded properly\npage_objects_1.analyticsPage.isAnalyticsPageLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Analytics page not loaded properly, skipping test');\n        page_objects_1.analyticsPage.takeScreenshot('analytics-not-loaded');\n        return;\n    }\n    // Try exporting as CSV if available\n    cy.get('body').then(function ($body) {\n        var hasExportButton = $body.find('[data-testid=\"export-button\"]').length > 0;\n        if (hasExportButton) {\n            page_objects_1.analyticsPage.exportAsCSV();\n            page_objects_1.analyticsPage.takeScreenshot('export-csv-attempted');\n        }\n        else {\n            cy.log('Export functionality not available');\n            page_objects_1.analyticsPage.takeScreenshot('export-not-available');\n        }\n    });\n});",
              "err": {},
              "uuid": "a74b29a0-1f36-4428-90f1-e61ec2a2fc75",
              "parentUUID": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should capture all analytics charts for documentation",
              "fullTitle": "Progress Analytics should capture all analytics charts for documentation",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if analytics page loaded properly\npage_objects_1.analyticsPage.isAnalyticsPageLoaded().then(function (isLoaded) {\n    if (!isLoaded) {\n        cy.log('Analytics page not loaded properly, skipping test');\n        page_objects_1.analyticsPage.takeScreenshot('analytics-not-loaded');\n        return;\n    }\n    // Capture all charts\n    page_objects_1.analyticsPage.captureAllCharts();\n    // Return to dashboard to verify navigation\n    page_objects_1.dashboardPage.visitDashboard();\n    page_objects_1.dashboardPage.isDashboardLoaded().then(function (isDashboardLoaded) {\n        expect(isDashboardLoaded).to.be.true;\n        page_objects_1.dashboardPage.takeScreenshot('return-to-dashboard');\n    });\n});",
              "err": {},
              "uuid": "f6e31d02-827e-4182-8312-3c2f96f251a1",
              "parentUUID": "0c7966c0-a4dc-437a-86cd-4c3eb91e8cd1",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87ea8e4d-1470-4645-a83c-4a0fd7f55b3c"
          ],
          "pending": [],
          "skipped": [
            "5eed2cfd-f35b-4f84-863d-072df298aa05",
            "007f4126-bf2c-4371-8654-9e5b610ebb21",
            "a74b29a0-1f36-4428-90f1-e61ec2a2fc75",
            "f6e31d02-827e-4182-8312-3c2f96f251a1"
          ],
          "duration": 1028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}