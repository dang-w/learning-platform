{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-22T08:54:00.700Z",
    "end": "2025-03-22T08:54:07.372Z",
    "duration": 6672,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "079583a9-8148-41bb-a9cf-de0321325566",
      "title": "",
      "fullFile": "e2e-testing/cypress/e2e/knowledge-spaced-repetition.cy.ts",
      "file": "e2e-testing/cypress/e2e/knowledge-spaced-repetition.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
          "title": "Knowledge Management - Spaced Repetition",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display concepts due for review",
              "fullTitle": "Knowledge Management - Spaced Repetition should display concepts due for review",
              "timedOut": null,
              "duration": 706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/knowledge-spaced-repetition.cy.ts/Knowledge Management - Spaced Repetition -- should display concepts due for review (failed).png\"\n    ],\n    [\n      \"/knowledge-spaced-repetition.cy.ts/Knowledge Management - Spaced Repetition -- should display concepts due for review (failed) (attempt 2).png\"\n    ],\n    [\n      \"/knowledge-spaced-repetition.cy.ts/Knowledge Management - Spaced Repetition -- should display concepts due for review -- before each hook (failed) (attempt 3).png\"\n    ]\n  ]\n}",
              "code": "// Navigate to review section\npage_objects_1.conceptsPage.navigateToReview();\n// Wait for the mocked data to load\ncy.wait('@getDueConcepts');\n// Check review dashboard is displayed\npage_objects_1.conceptsPage.isReviewDashboardVisible().should('be.true');\n// Validate that concepts are displayed\ncy.contains('Machine Learning Fundamentals').should('be.visible');\ncy.contains('Neural Networks').should('be.visible');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/e2e-test-fixes/knowledge-test\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Knowledge Management - Spac...`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/e2e-test-fixes/knowledge-test\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Knowledge Management - Spac...`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132351:76)\n    at visitFailedByErr (http://localhost:3000/__cypress/runner/cypress_runner.js:131757:12)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:132334:13)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at __webpack_modules__../cypress/support/page-objects/ConceptsPage.ts.ConceptsPage.visitConcepts (webpack:///./cypress/support/page-objects/ConceptsPage.ts:129:0)\n    at Context.eval (webpack:///./cypress/e2e/knowledge-spaced-repetition.cy.ts:10:0)",
                "diff": null
              },
              "uuid": "9ed4375e-3266-4c1e-b5e1-b1346eeae3c3",
              "parentUUID": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow reviewing a concept",
              "fullTitle": "Knowledge Management - Spaced Repetition should allow reviewing a concept",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the review section using POM\npage_objects_1.conceptsPage.navigateToReview();\n// Wait for the mocked data to load\ncy.wait('@getDueConcepts');\n// Start a review session\npage_objects_1.conceptsPage.startReviewSession();\n// Check that the review session is displayed\npage_objects_1.conceptsPage.isReviewSessionVisible().should('be.true');\n// Rate the recall difficulty\npage_objects_1.conceptsPage.rateConceptRecall(3); // Medium difficulty\n// Submit the review and wait for the mock response\npage_objects_1.conceptsPage.submitReview();\ncy.wait('@submitReview');\n// Check if there are more concepts or review is complete\npage_objects_1.conceptsPage.isReviewComplete().then(function (isComplete) {\n    if (isComplete) {\n        // Review session is complete\n        page_objects_1.conceptsPage.returnToDashboard();\n        cy.url().should('include', '/knowledge');\n    }\n    else {\n        // Next concept is displayed\n        page_objects_1.conceptsPage.elementExists(page_objects_1.conceptsPage['selectors'].conceptContent).should('be.true');\n    }\n});",
              "err": {},
              "uuid": "16af7446-879f-4600-b601-a16df9235aec",
              "parentUUID": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should update concept review schedule based on recall rating",
              "fullTitle": "Knowledge Management - Spaced Repetition should update concept review schedule based on recall rating",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the review section\npage_objects_1.conceptsPage.navigateToReview();\n// Wait for the mocked data to load\ncy.wait('@getDueConcepts');\n// Start a review session\npage_objects_1.conceptsPage.startReviewSession();\n// Mock concept ID\nvar conceptId = 'mock-concept-1';\n// Rate the recall as easy\npage_objects_1.conceptsPage.rateConceptRecall(5); // Easy recall\n// Submit the review\npage_objects_1.conceptsPage.submitReview();\ncy.wait('@submitReview');\n// Navigate to the concept details page\ncy.visit(\"/knowledge/concepts/\".concat(conceptId));\n// Mock the single concept data\ncy.intercept('GET', \"**/api/concepts/\".concat(conceptId), {\n    statusCode: 200,\n    body: {\n        id: conceptId,\n        title: 'Machine Learning Fundamentals',\n        content: 'Machine learning is a subset of artificial intelligence that focuses on building systems that learn from data.',\n        status: 'reviewed',\n        lastReviewed: new Date().toISOString(),\n        nextReview: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n        difficulty: 2\n    }\n}).as('getConceptDetails');\n// Wait for the concept data\ncy.wait('@getConceptDetails');\ncy.wait('@getReviewHistory');\n// Check that the next review date is updated\npage_objects_1.conceptsPage.elementExists(page_objects_1.conceptsPage['selectors'].nextReviewDate).should('be.true');\n// Check that the review history is updated\npage_objects_1.conceptsPage.elementExists(page_objects_1.conceptsPage['selectors'].reviewHistory).then(function (exists) {\n    if (exists) {\n        cy.get(page_objects_1.conceptsPage['selectors'].reviewHistory).should('be.visible');\n    }\n});",
              "err": {},
              "uuid": "d2bf6609-3378-41a2-a726-9a04ae0e5213",
              "parentUUID": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should show review statistics",
              "fullTitle": "Knowledge Management - Spaced Repetition should show review statistics",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the statistics section\npage_objects_1.conceptsPage.navigateToStatistics();\n// Wait for the statistics data\ncy.wait('@getStatistics');\n// Check that the statistics dashboard is displayed\npage_objects_1.conceptsPage.isStatisticsDashboardVisible().should('be.true');\n// Check that the key statistics are displayed\ncy.contains('Total Concepts').should('be.visible');\ncy.contains('10').should('be.visible'); // Total concepts from mock data\ncy.contains('Due').should('be.visible');\ncy.contains('3').should('be.visible'); // Due concepts from mock data",
              "err": {},
              "uuid": "d9244c78-d102-40a7-aed5-ab39a7c90718",
              "parentUUID": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow filtering concepts by review status",
              "fullTitle": "Knowledge Management - Spaced Repetition should allow filtering concepts by review status",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Mock filtered concepts response\ncy.intercept('GET', '**/api/concepts?status=due', {\n    statusCode: 200,\n    body: [\n        {\n            id: 'mock-concept-1',\n            title: 'Machine Learning Fundamentals',\n            content: 'Machine learning is a subset of artificial intelligence that focuses on building systems that learn from data.',\n            status: 'due',\n            lastReviewed: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            nextReview: new Date().toISOString(),\n            difficulty: 3\n        },\n        {\n            id: 'mock-concept-2',\n            title: 'Neural Networks',\n            content: 'Neural networks are computing systems inspired by the biological neural networks that constitute animal brains.',\n            status: 'due',\n            lastReviewed: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n            nextReview: new Date().toISOString(),\n            difficulty: 4\n        }\n    ]\n}).as('getFilteredConcepts');\n// Check that the concepts list is displayed\npage_objects_1.conceptsPage.elementExists(page_objects_1.conceptsPage['selectors'].conceptsList).should('be.true');\n// Filter by review status\npage_objects_1.conceptsPage.filterByReviewStatus('due');\n// Wait for filtered concepts\ncy.wait('@getFilteredConcepts');\n// Check that the URL includes the filter parameter\ncy.url().should('include', 'status=due');\n// Check that the filtered concepts list is displayed\npage_objects_1.conceptsPage.elementExists(page_objects_1.conceptsPage['selectors'].conceptsList).should('be.true');\ncy.contains('Machine Learning Fundamentals').should('be.visible');",
              "err": {},
              "uuid": "8d37b0d0-8f11-4714-a1f0-da6c160b4fc1",
              "parentUUID": "b0f126b7-0a83-48c4-8970-9a8ce15ccd84",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9ed4375e-3266-4c1e-b5e1-b1346eeae3c3"
          ],
          "pending": [],
          "skipped": [
            "16af7446-879f-4600-b601-a16df9235aec",
            "d2bf6609-3378-41a2-a726-9a04ae0e5213",
            "d9244c78-d102-40a7-aed5-ab39a7c90718",
            "8d37b0d0-8f11-4714-a1f0-da6c160b4fc1"
          ],
          "duration": 706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/mochawesome/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}