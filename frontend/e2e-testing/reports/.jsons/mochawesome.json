{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-18T15:04:50.630Z",
    "end": "2025-03-18T15:04:52.477Z",
    "duration": 1847,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "e4d8cb0d-d13e-49fb-a5e3-5bf943ca5ee8",
      "title": "",
      "fullFile": "cypress/e2e/analytics-visualization.cy.ts",
      "file": "cypress/e2e/analytics-visualization.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
          "title": "Progress Analytics - Data Visualization",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the analytics dashboard with charts",
              "fullTitle": "Progress Analytics - Data Visualization should display the analytics dashboard with charts",
              "timedOut": null,
              "duration": 430,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Check that the analytics dashboard is displayed\ncy.get('[data-testid=\"analytics-dashboard\"]').should('be.visible');\n// Check that the study time chart is displayed\ncy.get('[data-testid=\"study-time-chart\"]').should('be.visible');\n// Check that the resources completed chart is displayed\ncy.get('[data-testid=\"resources-completed-chart\"]').should('be.visible');\n// Check that the concepts reviewed chart is displayed\ncy.get('[data-testid=\"concepts-reviewed-chart\"]').should('be.visible');",
              "err": {
                "message": "CypressError: Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.request()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Progress Analytics - Data V...`",
                "estack": "CypressError: Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n\nThe command that returned the promise was:\n\n  > `cy.request()`\n\nThe cy command you invoked inside the promise was:\n\n  > `cy.log()`\n\nBecause Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n\nCypress will resolve your command with whatever the final Cypress command yields.\n\nThe reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n\nhttps://on.cypress.io/returning-promise-and-commands-in-another-command\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Progress Analytics - Data V...`\n    at cy.<computed> [as log] (http://localhost:3000/__cypress/runner/cypress_runner.js:138922:64)\n    at eval (webpack:///../../cypress/support/e2e.js:157:11)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at tryCreateUser (webpack:///../../cypress/support/commands.ts:130:0)\n    at Context.eval (webpack:///../../cypress/support/commands.ts:160:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "c3ef4732-3ad9-48fe-a0e0-5b3f468a1e18",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow filtering analytics by date range",
              "fullTitle": "Progress Analytics - Data Visualization should allow filtering analytics by date range",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the date range filter is displayed\ncy.get('[data-testid=\"date-range-filter\"]').should('be.visible');\n// Open the date range picker\ncy.get('[data-testid=\"date-range-filter\"]').click();\n// Select the last 7 days\ncy.get('[data-testid=\"range-last-7-days\"]').click();\n// Check that the URL includes the date range parameter\ncy.url().should('include', 'range=7');\n// Check that the charts are updated\ncy.get('[data-testid=\"study-time-chart\"]').should('be.visible');\ncy.get('[data-testid=\"chart-period-label\"]').should('contain', '7 days');",
              "err": {},
              "uuid": "3afed177-a6f0-41fc-82dc-0de263bad7d3",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow selecting custom date range",
              "fullTitle": "Progress Analytics - Data Visualization should allow selecting custom date range",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the date range filter is displayed\ncy.get('[data-testid=\"date-range-filter\"]').click();\n// Select custom range option\ncy.get('[data-testid=\"range-custom\"]').click();\n// Set start date (7 days ago)\nvar startDate = new Date();\nstartDate.setDate(startDate.getDate() - 7);\nvar startDateString = startDate.toISOString().split('T')[0];\ncy.get('[data-testid=\"custom-start-date\"]').type(startDateString);\n// Set end date (today)\nvar endDate = new Date();\nvar endDateString = endDate.toISOString().split('T')[0];\ncy.get('[data-testid=\"custom-end-date\"]').type(endDateString);\n// Apply the custom range\ncy.get('[data-testid=\"apply-custom-range\"]').click();\n// Check that the URL includes the date range parameters\ncy.url().should('include', \"start=\".concat(startDateString));\ncy.url().should('include', \"end=\".concat(endDateString));\n// Check that the charts are updated\ncy.get('[data-testid=\"study-time-chart\"]').should('be.visible');",
              "err": {},
              "uuid": "a0403689-099e-44bd-a0e5-f6053fe229ff",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow toggling between different chart types",
              "fullTitle": "Progress Analytics - Data Visualization should allow toggling between different chart types",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the chart type toggle is displayed\ncy.get('[data-testid=\"chart-type-toggle\"]').should('be.visible');\n// Switch to bar chart\ncy.get('[data-testid=\"chart-type-bar\"]').click();\n// Check that the URL includes the chart type parameter\ncy.url().should('include', 'chartType=bar');\n// Check that the bar chart is displayed\ncy.get('[data-testid=\"study-time-chart\"]').should('have.attr', 'data-chart-type', 'bar');\n// Switch to line chart\ncy.get('[data-testid=\"chart-type-line\"]').click();\n// Check that the URL includes the chart type parameter\ncy.url().should('include', 'chartType=line');\n// Check that the line chart is displayed\ncy.get('[data-testid=\"study-time-chart\"]').should('have.attr', 'data-chart-type', 'line');",
              "err": {},
              "uuid": "b816681f-49a0-4a52-96ea-c43d3cd85429",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow exporting analytics data",
              "fullTitle": "Progress Analytics - Data Visualization should allow exporting analytics data",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the export button is displayed\ncy.get('[data-testid=\"export-data-button\"]').should('be.visible');\n// Click the export button\ncy.get('[data-testid=\"export-data-button\"]').click();\n// Check that the export options are displayed\ncy.get('[data-testid=\"export-options\"]').should('be.visible');\n// Select CSV export\ncy.get('[data-testid=\"export-csv\"]').click();\n// Check that the download starts\n// Note: We can't directly test file downloads in Cypress, but we can check that the request is made\ncy.intercept('GET', '/api/analytics/export?format=csv').as('exportCsv');\ncy.wait('@exportCsv').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "78c44832-a8c3-479d-8f39-9d77260f5bdd",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow adding a new study metric",
              "fullTitle": "Progress Analytics - Data Visualization should allow adding a new study metric",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the add metric button is displayed\ncy.get('[data-testid=\"add-metric-button\"]').should('be.visible');\n// Click the add metric button\ncy.get('[data-testid=\"add-metric-button\"]').click();\n// Check that the add metric form is displayed\ncy.get('[data-testid=\"add-metric-form\"]').should('be.visible');\n// Fill out the form\nvar today = new Date().toISOString().split('T')[0];\ncy.get('[data-testid=\"metric-date-input\"]').type(today);\ncy.get('[data-testid=\"study-time-input\"]').type('60');\ncy.get('[data-testid=\"resources-completed-input\"]').type('2');\ncy.get('[data-testid=\"concepts-reviewed-input\"]').type('5');\n// Submit the form\ncy.get('[data-testid=\"save-metric-button\"]').click();\n// Check that the form is closed\ncy.get('[data-testid=\"add-metric-form\"]').should('not.exist');\n// Check that the charts are updated\ncy.get('[data-testid=\"study-time-chart\"]').should('be.visible');",
              "err": {},
              "uuid": "e8422270-7c99-4857-9e1d-30bb1c1613f6",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should generate a weekly report",
              "fullTitle": "Progress Analytics - Data Visualization should generate a weekly report",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check that the generate report button is displayed\ncy.get('[data-testid=\"generate-report-button\"]').should('be.visible');\n// Click the generate report button\ncy.get('[data-testid=\"generate-report-button\"]').click();\n// Check that the report options are displayed\ncy.get('[data-testid=\"report-options\"]').should('be.visible');\n// Select weekly report\ncy.get('[data-testid=\"weekly-report\"]').click();\n// Check that the report is generated\ncy.get('[data-testid=\"report-content\"]', { timeout: 10000 }).should('be.visible');\n// Check that the report contains the expected sections\ncy.get('[data-testid=\"report-summary\"]').should('be.visible');\ncy.get('[data-testid=\"report-charts\"]').should('be.visible');\ncy.get('[data-testid=\"report-recommendations\"]').should('be.visible');",
              "err": {},
              "uuid": "721b8252-f135-4e82-9fc3-b08b8b665ab4",
              "parentUUID": "ac86ae14-1ae4-4574-ac00-6ea019decbe2",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c3ef4732-3ad9-48fe-a0e0-5b3f468a1e18"
          ],
          "pending": [],
          "skipped": [
            "3afed177-a6f0-41fc-82dc-0de263bad7d3",
            "a0403689-099e-44bd-a0e5-f6053fe229ff",
            "b816681f-49a0-4a52-96ea-c43d3cd85429",
            "78c44832-a8c3-479d-8f39-9d77260f5bdd",
            "e8422270-7c99-4857-9e1d-30bb1c1613f6",
            "721b8252-f135-4e82-9fc3-b08b8b665ab4"
          ],
          "duration": 430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "e2e-testing/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}