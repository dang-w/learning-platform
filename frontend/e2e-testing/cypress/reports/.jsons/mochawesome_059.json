{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-17T17:52:26.687Z",
    "end": "2025-03-17T17:52:27.226Z",
    "duration": 539,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "eac54a14-e7e3-492f-a229-da29e78b511b",
      "title": "",
      "fullFile": "cypress/e2e/knowledge.cy.ts",
      "file": "cypress/e2e/knowledge.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
          "title": "Knowledge Management",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display concepts list and allow filtering",
              "fullTitle": "Knowledge Management should display concepts list and allow filtering",
              "timedOut": null,
              "duration": 420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/knowledge.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/knowledge.cy.ts/Knowledge Management -- should display concepts list and allow filtering -- before each hook (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Check that concepts list is displayed\ncy.get('[data-testid=\"concepts-list\"]').should('be.visible');\n// Test filtering by topic\ncy.get('[data-testid=\"filter-topic\"]').click();\ncy.get('[data-testid=\"filter-topic-python\"]').click();\ncy.url().should('include', 'topic=python');\n// Test filtering by difficulty\ncy.get('[data-testid=\"filter-difficulty\"]').click();\ncy.get('[data-testid=\"filter-difficulty-beginner\"]').click();\ncy.url().should('include', 'difficulty=beginner');\n// Test filtering by review status\ncy.get('[data-testid=\"filter-status\"]').click();\ncy.get('[data-testid=\"filter-status-due\"]').click();\ncy.url().should('include', 'status=due');\n// Clear filters\ncy.get('[data-testid=\"clear-filters\"]').click();\ncy.url().should('not.include', 'topic=');\ncy.url().should('not.include', 'difficulty=');\ncy.url().should('not.include', 'status=');",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8000/token\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8000/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 46\n}\nBody: username=test-user&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 17 Mar 2025 17:52:26 GMT\",\n  \"server\": \"uvicorn\",\n  \"www-authenticate\": \"Bearer\",\n  \"content-length\": \"43\",\n  \"content-type\": \"application/json\"\n}\nBody: {\n  \"detail\": \"Incorrect username or password\"\n}\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Knowledge Management`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8000/token\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8000/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 46\n}\nBody: username=test-user&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 17 Mar 2025 17:52:26 GMT\",\n  \"server\": \"uvicorn\",\n  \"www-authenticate\": \"Bearer\",\n  \"content-length\": \"43\",\n  \"content-type\": \"application/json\"\n}\nBody: {\n  \"detail\": \"Incorrect username or password\"\n}\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Knowledge Management`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133638:72)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/support/commands.ts:16:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "a6cdc824-3df4-4fa1-9745-a591e3deec6a",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow creating a new concept",
              "fullTitle": "Knowledge Management should allow creating a new concept",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on add concept button\ncy.get('[data-testid=\"add-concept\"]').click();\n// Fill out the concept form\nvar conceptTitle = \"Test Concept \".concat(Date.now());\ncy.get('input[name=\"title\"]').type(conceptTitle);\n// Use markdown editor\ncy.get('[data-testid=\"markdown-editor\"]').type('# Test Concept\\n\\nThis is a test concept created by Cypress.');\ncy.get('[data-testid=\"concept-difficulty\"]').click();\ncy.get('[data-testid=\"concept-difficulty-intermediate\"]').click();\ncy.get('[data-testid=\"concept-topics\"]').type('python{enter}testing{enter}');\n// Submit the form\ncy.get('button[type=\"submit\"]').click();\n// Verify the concept was created\ncy.get('[data-testid=\"success-notification\"]').should('be.visible');\n// Verify the concept appears in the list\ncy.get('[data-testid=\"concepts-list\"]').contains(conceptTitle).should('be.visible');",
              "err": {},
              "uuid": "08022099-4465-4e2b-9475-5f359d2790e4",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow editing an existing concept",
              "fullTitle": "Knowledge Management should allow editing an existing concept",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find the first concept and click edit\ncy.get('[data-testid=\"concept-item\"]').first().within(function () {\n    cy.get('[data-testid=\"edit-concept\"]').click();\n});\n// Update the concept title\nvar updatedTitle = \"Updated Concept \".concat(Date.now());\ncy.get('input[name=\"title\"]').clear().type(updatedTitle);\n// Update the content\ncy.get('[data-testid=\"markdown-editor\"]').clear().type('# Updated Concept\\n\\nThis concept was updated by Cypress.');\n// Submit the form\ncy.get('button[type=\"submit\"]').click();\n// Verify the concept was updated\ncy.get('[data-testid=\"success-notification\"]').should('be.visible');\n// Verify the updated concept appears in the list\ncy.get('[data-testid=\"concepts-list\"]').contains(updatedTitle).should('be.visible');",
              "err": {},
              "uuid": "0c907cca-c5a7-4f4d-8cf0-314c34de297a",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow reviewing a concept",
              "fullTitle": "Knowledge Management should allow reviewing a concept",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Find the first concept and click review\ncy.get('[data-testid=\"concept-item\"]').first().within(function () {\n    cy.get('[data-testid=\"review-concept\"]').click();\n});\n// Verify the review page is displayed\ncy.get('[data-testid=\"concept-review\"]').should('be.visible');\n// View the answer\ncy.get('[data-testid=\"show-answer\"]').click();\ncy.get('[data-testid=\"concept-content\"]').should('be.visible');\n// Rate confidence\ncy.get('[data-testid=\"confidence-4\"]').click();\n// Add review notes\ncy.get('textarea[name=\"notes\"]').type('Reviewed during Cypress testing');\n// Submit the review\ncy.get('[data-testid=\"submit-review\"]').click();\n// Verify the review was submitted\ncy.get('[data-testid=\"success-notification\"]').should('be.visible');\n// Verify we're back at the concepts list\ncy.url().should('include', '/knowledge');",
              "err": {},
              "uuid": "a314ce67-ed41-4659-a134-c8801106468e",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow starting a review session",
              "fullTitle": "Knowledge Management should allow starting a review session",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on start review session button\ncy.get('[data-testid=\"start-review-session\"]').click();\n// Verify the review session page is displayed\ncy.get('[data-testid=\"review-session\"]').should('be.visible');\n// Complete at least one review in the session\ncy.get('[data-testid=\"show-answer\"]').click();\ncy.get('[data-testid=\"confidence-3\"]').click();\n// Verify the next concept is displayed or session is complete\ncy.get('body').then(function ($body) {\n    if ($body.find('[data-testid=\"review-complete\"]').length > 0) {\n        // Session is complete\n        cy.get('[data-testid=\"review-complete\"]').should('be.visible');\n        cy.get('[data-testid=\"return-to-knowledge\"]').click();\n    }\n    else {\n        // More concepts to review\n        cy.get('[data-testid=\"show-answer\"]').should('be.visible');\n    }\n});",
              "err": {},
              "uuid": "3d8b8232-73f5-43ea-9913-da4a6289fdec",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should display concept statistics",
              "fullTitle": "Knowledge Management should display concept statistics",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on statistics tab\ncy.get('[data-testid=\"statistics-tab\"]').click();\n// Verify statistics are displayed\ncy.get('[data-testid=\"concepts-stats\"]').should('be.visible');\ncy.get('[data-testid=\"review-history-chart\"]').should('be.visible');\ncy.get('[data-testid=\"confidence-chart\"]').should('be.visible');\ncy.get('[data-testid=\"topics-distribution-chart\"]').should('be.visible');\n// Test date range filter\ncy.get('[data-testid=\"date-range-selector\"]').click();\ncy.get('[data-testid=\"date-range-last-month\"]').click();\n// Verify charts are updated\ncy.get('[data-testid=\"review-history-chart\"]').should('be.visible');",
              "err": {},
              "uuid": "bf1ecc78-4048-4124-9c06-6c1c6222f1f6",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should allow deleting a concept",
              "fullTitle": "Knowledge Management should allow deleting a concept",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get the title of the first concept\nvar conceptTitle;\ncy.get('[data-testid=\"concept-item\"]').first().within(function () {\n    cy.get('[data-testid=\"concept-title\"]').invoke('text').then(function (text) {\n        conceptTitle = text;\n    });\n});\n// Find the first concept and click delete\ncy.get('[data-testid=\"concept-item\"]').first().within(function () {\n    cy.get('[data-testid=\"delete-concept\"]').click();\n});\n// Confirm deletion\ncy.get('[data-testid=\"confirm-delete\"]').click();\n// Verify the concept was deleted\ncy.get('[data-testid=\"success-notification\"]').should('be.visible');\n// Verify the concept no longer appears in the list\ncy.get('[data-testid=\"concepts-list\"]').contains(conceptTitle).should('not.exist');",
              "err": {},
              "uuid": "75736e28-54af-474b-96e8-61e0021f67ca",
              "parentUUID": "7ebe15fd-9d07-4081-b942-fcd74b8185ba",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a6cdc824-3df4-4fa1-9745-a591e3deec6a"
          ],
          "pending": [],
          "skipped": [
            "08022099-4465-4e2b-9475-5f359d2790e4",
            "0c907cca-c5a7-4f4d-8cf0-314c34de297a",
            "a314ce67-ed41-4659-a134-c8801106468e",
            "3d8b8232-73f5-43ea-9913-da4a6289fdec",
            "bf1ecc78-4048-4124-9c06-6c1c6222f1f6",
            "75736e28-54af-474b-96e8-61e0021f67ca"
          ],
          "duration": 420,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}