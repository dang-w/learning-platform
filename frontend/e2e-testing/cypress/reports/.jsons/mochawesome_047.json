{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2025-03-17T17:23:09.652Z",
    "end": "2025-03-17T17:23:49.190Z",
    "duration": 39538,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4b04bf56-3312-4a4b-8a23-c1d2a2404fc5",
      "title": "",
      "fullFile": "cypress/e2e/auth.cy.ts",
      "file": "cypress/e2e/auth.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b0ffcbc7-87b3-41ad-a314-728ef676cbd8",
          "title": "Authentication Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow a user to register, login, and access protected routes",
              "fullTitle": "Authentication Flow should allow a user to register, login, and access protected routes",
              "timedOut": null,
              "duration": 13532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/auth.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/auth.cy.ts/Authentication Flow -- should allow a user to register, login, and access protected routes (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Visit the registration page\ncy.visit('/auth/register');\ncy.url().should('include', '/auth/register');\n// Fill out the registration form\ncy.get('input[name=\"username\"]').type(testUser.username);\ncy.get('input[name=\"email\"]').type(testUser.email);\ncy.get('input[name=\"password\"]').type(testUser.password);\ncy.get('input[name=\"fullName\"]').type(testUser.fullName);\n// Submit the form\ncy.get('button[type=\"submit\"]').click();\n// Should be redirected to login page after successful registration\ncy.url().should('include', '/auth/login');\n// Login with the newly created account\ncy.get('input[name=\"username\"]').type(testUser.username);\ncy.get('input[name=\"password\"]').type(testUser.password);\ncy.get('button[type=\"submit\"]').click();\n// Should be redirected to dashboard after successful login\ncy.url().should('include', '/dashboard');\n// Verify user is logged in by checking for user-specific elements\ncy.get('[data-testid=\"user-greeting\"]').should('contain', testUser.username);\n// Test navigation to protected routes\ncy.get('[data-testid=\"nav-resources\"]').click();\ncy.url().should('include', '/resources');\ncy.get('[data-testid=\"nav-learning-path\"]').click();\ncy.url().should('include', '/learning-path');\ncy.get('[data-testid=\"nav-knowledge\"]').click();\ncy.url().should('include', '/knowledge');\ncy.get('[data-testid=\"nav-analytics\"]').click();\ncy.url().should('include', '/analytics');\n// Test logout functionality\ncy.get('[data-testid=\"user-menu\"]').click();\ncy.get('[data-testid=\"logout-button\"]').click();\n// Should be redirected to login page after logout\ncy.url().should('include', '/auth/login');\n// Verify user cannot access protected routes after logout\ncy.visit('/dashboard');\ncy.url().should('include', '/auth/login');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected 'http://localhost:3000/auth/register' to include '/auth/login'",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected 'http://localhost:3000/auth/register' to include '/auth/login'\n    at Context.eval (webpack://frontend/./cypress/e2e/auth.cy.ts:25:0)",
                "diff": null
              },
              "uuid": "38eeef4c-4d1c-4633-9728-0291d71d6f79",
              "parentUUID": "b0ffcbc7-87b3-41ad-a314-728ef676cbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation errors for invalid registration",
              "fullTitle": "Authentication Flow should show validation errors for invalid registration",
              "timedOut": null,
              "duration": 11779,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/auth.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/auth.cy.ts/Authentication Flow -- should show validation errors for invalid registration (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "cy.visit('/auth/register');\n// Submit empty form\ncy.get('button[type=\"submit\"]').click();\n// Should show validation errors\ncy.get('[data-testid=\"error-username\"]').should('be.visible');\ncy.get('[data-testid=\"error-email\"]').should('be.visible');\ncy.get('[data-testid=\"error-password\"]').should('be.visible');\n// Test invalid email format\ncy.get('input[name=\"username\"]').type('testuser');\ncy.get('input[name=\"email\"]').type('invalid-email');\ncy.get('input[name=\"password\"]').type('short');\ncy.get('input[name=\"fullName\"]').type('Test User');\ncy.get('button[type=\"submit\"]').click();\n// Should show specific validation errors\ncy.get('[data-testid=\"error-email\"]').should('be.visible');\ncy.get('[data-testid=\"error-password\"]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"error-username\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"error-username\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/auth.cy.ts:57:0)",
                "diff": null
              },
              "uuid": "9346eeda-3ac1-4128-a3cb-6a531286273d",
              "parentUUID": "b0ffcbc7-87b3-41ad-a314-728ef676cbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error for invalid login credentials",
              "fullTitle": "Authentication Flow should show error for invalid login credentials",
              "timedOut": null,
              "duration": 13334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/auth.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/auth.cy.ts/Authentication Flow -- should show error for invalid login credentials (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "cy.visit('/auth/login');\n// Try to login with invalid credentials\ncy.get('input[name=\"username\"]').type('nonexistent-user');\ncy.get('input[name=\"password\"]').type('WrongPassword123!');\ncy.get('button[type=\"submit\"]').click();\n// Should show error message\ncy.get('[data-testid=\"login-error\"]').should('be.visible');\n// URL should still be login page\ncy.url().should('include', '/auth/login');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"login-error\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"login-error\"]`, but never found it.\n    at Context.eval (webpack://frontend/./cypress/e2e/auth.cy.ts:77:0)",
                "diff": null
              },
              "uuid": "21798593-9782-45f9-8aed-0af30944cf9b",
              "parentUUID": "b0ffcbc7-87b3-41ad-a314-728ef676cbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should support programmatic login via custom command",
              "fullTitle": "Authentication Flow should support programmatic login via custom command",
              "timedOut": null,
              "duration": 704,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/auth.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/auth.cy.ts/Authentication Flow -- should support programmatic login via custom command (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Use the custom login command\ncy.login(testUser.username, testUser.password);\n// Visit the dashboard\ncy.visit('/dashboard');\n// Should be on dashboard page (not redirected to login)\ncy.url().should('include', '/dashboard');\n// Verify user is logged in\ncy.get('[data-testid=\"user-greeting\"]').should('contain', testUser.username);",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8000/token\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8000/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 60\n}\nBody: username=test-user-1742232189528&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 17 Mar 2025 17:23:48 GMT\",\n  \"server\": \"uvicorn\",\n  \"www-authenticate\": \"Bearer\",\n  \"content-length\": \"43\",\n  \"content-type\": \"application/json\"\n}\nBody: {\n  \"detail\": \"Incorrect username or password\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8000/token\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8000/token\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.137 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"content-type\": \"application/x-www-form-urlencoded\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 60\n}\nBody: username=test-user-1742232189528&password=TestPassword123%21\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 17 Mar 2025 17:23:48 GMT\",\n  \"server\": \"uvicorn\",\n  \"www-authenticate\": \"Bearer\",\n  \"content-length\": \"43\",\n  \"content-type\": \"application/json\"\n}\nBody: {\n  \"detail\": \"Incorrect username or password\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133638:72)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/support/commands.ts:16:0)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:138854:43)",
                "diff": null
              },
              "uuid": "15a1f25a-2226-4ff4-8212-aacfad9e056a",
              "parentUUID": "b0ffcbc7-87b3-41ad-a314-728ef676cbd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "38eeef4c-4d1c-4633-9728-0291d71d6f79",
            "9346eeda-3ac1-4128-a3cb-6a531286273d",
            "21798593-9782-45f9-8aed-0af30944cf9b",
            "15a1f25a-2226-4ff4-8212-aacfad9e056a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Learning Platform E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}